<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AssimpNet.3.2.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Assimp.Configs.Fakes.ShimACEvaluateSubdivisionConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.ACEvaluateSubdivisionConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimACEvaluateSubdivisionConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimACEvaluateSubdivisionConfig.#ctor(Assimp.Configs.ACEvaluateSubdivisionConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimACEvaluateSubdivisionConfig.ACEvaluateSubdivisionConfigNameGet">
            <summary>Задает оболочка совместимости ACEvaluateSubdivisionConfig.get_ACEvaluateSubdivisionConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimACEvaluateSubdivisionConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimACEvaluateSubdivisionConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimACEvaluateSubdivisionConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimACEvaluateSubdivisionConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimACEvaluateSubdivisionConfig.ConstructorBoolean">
            <summary>Задает оболочка совместимости ACEvaluateSubdivisionConfig.ACEvaluateSubdivisionConfig(Boolean evaluateSubdivision)</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimACSeparateBackfaceCullConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.ACSeparateBackfaceCullConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimACSeparateBackfaceCullConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimACSeparateBackfaceCullConfig.#ctor(Assimp.Configs.ACSeparateBackfaceCullConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimACSeparateBackfaceCullConfig.ACSeparateBackfaceCullConfigNameGet">
            <summary>Задает оболочка совместимости ACSeparateBackfaceCullConfig.get_ACSeparateBackfaceCullConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimACSeparateBackfaceCullConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimACSeparateBackfaceCullConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimACSeparateBackfaceCullConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimACSeparateBackfaceCullConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimACSeparateBackfaceCullConfig.ConstructorBoolean">
            <summary>Задает оболочка совместимости ACSeparateBackfaceCullConfig.ACSeparateBackfaceCullConfig(Boolean separateBackfaces)</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimASEReconstructNormalsConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.ASEReconstructNormalsConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimASEReconstructNormalsConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimASEReconstructNormalsConfig.#ctor(Assimp.Configs.ASEReconstructNormalsConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimASEReconstructNormalsConfig.ASEReconstructNormalsConfigNameGet">
            <summary>Задает оболочка совместимости ASEReconstructNormalsConfig.get_ASEReconstructNormalsConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimASEReconstructNormalsConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimASEReconstructNormalsConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimASEReconstructNormalsConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimASEReconstructNormalsConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimASEReconstructNormalsConfig.ConstructorBoolean">
            <summary>Задает оболочка совместимости ASEReconstructNormalsConfig.ASEReconstructNormalsConfig(Boolean reconstructNormals)</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimAnimationAccuracyConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.AnimationAccuracyConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimAnimationAccuracyConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimAnimationAccuracyConfig.#ctor(Assimp.Configs.AnimationAccuracyConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimAnimationAccuracyConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimAnimationAccuracyConfig.AnimationAccuracyConfigNameGet">
            <summary>Задает оболочка совместимости AnimationAccuracyConfig.get_AnimationAccuracyConfigName()</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimAnimationAccuracyConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimAnimationAccuracyConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimAnimationAccuracyConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimAnimationAccuracyConfig.ConstructorSingle">
            <summary>Задает оболочка совместимости AnimationAccuracyConfig.AnimationAccuracyConfig(Single episilon)</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimBooleanPropertyConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.BooleanPropertyConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimBooleanPropertyConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimBooleanPropertyConfig.#ctor(Assimp.Configs.BooleanPropertyConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimBooleanPropertyConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimBooleanPropertyConfig.AllInstances.DefaultValueGet">
            <summary>Задает оболочка совместимости BooleanPropertyConfig.get_DefaultValue()</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimBooleanPropertyConfig.AllInstances.OnApplyValueIntPtr">
            <summary>Задает оболочка совместимости BooleanPropertyConfig.OnApplyValue(IntPtr propStore)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimBooleanPropertyConfig.AllInstances.SetDefaultValue">
            <summary>Задает оболочка совместимости BooleanPropertyConfig.SetDefaultValue()</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimBooleanPropertyConfig.AllInstances.ValueGet">
            <summary>Задает оболочка совместимости BooleanPropertyConfig.get_Value()</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimBooleanPropertyConfig.AllInstances.ValueSetBoolean">
            <summary>Задает оболочка совместимости BooleanPropertyConfig.set_Value(Boolean value)</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimBooleanPropertyConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimBooleanPropertyConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimBooleanPropertyConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimBooleanPropertyConfig.ConstructorStringBoolean">
            <summary>Задает оболочка совместимости BooleanPropertyConfig.BooleanPropertyConfig(String name, Boolean value)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimBooleanPropertyConfig.ConstructorStringBooleanBoolean">
            <summary>Задает оболочка совместимости BooleanPropertyConfig.BooleanPropertyConfig(String name, Boolean value, Boolean defaultValue)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimBooleanPropertyConfig.DefaultValueGet">
            <summary>Задает оболочка совместимости BooleanPropertyConfig.get_DefaultValue()</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimBooleanPropertyConfig.OnApplyValueIntPtr">
            <summary>Задает оболочка совместимости BooleanPropertyConfig.OnApplyValue(IntPtr propStore)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimBooleanPropertyConfig.SetDefaultValue">
            <summary>Задает оболочка совместимости BooleanPropertyConfig.SetDefaultValue()</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimBooleanPropertyConfig.ValueGet">
            <summary>Задает оболочка совместимости BooleanPropertyConfig.get_Value()</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimBooleanPropertyConfig.ValueSetBoolean">
            <summary>Задает оболочка совместимости BooleanPropertyConfig.set_Value(Boolean value)</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimDeboneAllOrNoneConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.DeboneAllOrNoneConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimDeboneAllOrNoneConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimDeboneAllOrNoneConfig.#ctor(Assimp.Configs.DeboneAllOrNoneConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimDeboneAllOrNoneConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimDeboneAllOrNoneConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimDeboneAllOrNoneConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimDeboneAllOrNoneConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimDeboneAllOrNoneConfig.ConstructorBoolean">
            <summary>Задает оболочка совместимости DeboneAllOrNoneConfig.DeboneAllOrNoneConfig(Boolean allOrNone)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimDeboneAllOrNoneConfig.DeboneAllOrNoneConfigNameGet">
            <summary>Задает оболочка совместимости DeboneAllOrNoneConfig.get_DeboneAllOrNoneConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimDeboneThresholdConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.DeboneThresholdConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimDeboneThresholdConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimDeboneThresholdConfig.#ctor(Assimp.Configs.DeboneThresholdConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimDeboneThresholdConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimDeboneThresholdConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimDeboneThresholdConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimDeboneThresholdConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimDeboneThresholdConfig.ConstructorSingle">
            <summary>Задает оболочка совместимости DeboneThresholdConfig.DeboneThresholdConfig(Single threshold)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimDeboneThresholdConfig.DeboneThresholdConfigNameGet">
            <summary>Задает оболочка совместимости DeboneThresholdConfig.get_DeboneThresholdConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimFavorSpeedConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.FavorSpeedConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimFavorSpeedConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimFavorSpeedConfig.#ctor(Assimp.Configs.FavorSpeedConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimFavorSpeedConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimFavorSpeedConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimFavorSpeedConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimFavorSpeedConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimFavorSpeedConfig.ConstructorBoolean">
            <summary>Задает оболочка совместимости FavorSpeedConfig.FavorSpeedConfig(Boolean favorSpeed)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimFavorSpeedConfig.FavorSpeedConfigNameGet">
            <summary>Задает оболочка совместимости FavorSpeedConfig.get_FavorSpeedConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimFloatPropertyConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.FloatPropertyConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimFloatPropertyConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimFloatPropertyConfig.#ctor(Assimp.Configs.FloatPropertyConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimFloatPropertyConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimFloatPropertyConfig.AllInstances.DefaultValueGet">
            <summary>Задает оболочка совместимости FloatPropertyConfig.get_DefaultValue()</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimFloatPropertyConfig.AllInstances.OnApplyValueIntPtr">
            <summary>Задает оболочка совместимости FloatPropertyConfig.OnApplyValue(IntPtr propStore)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimFloatPropertyConfig.AllInstances.SetDefaultValue">
            <summary>Задает оболочка совместимости FloatPropertyConfig.SetDefaultValue()</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimFloatPropertyConfig.AllInstances.ValueGet">
            <summary>Задает оболочка совместимости FloatPropertyConfig.get_Value()</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimFloatPropertyConfig.AllInstances.ValueSetSingle">
            <summary>Задает оболочка совместимости FloatPropertyConfig.set_Value(Single value)</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimFloatPropertyConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimFloatPropertyConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimFloatPropertyConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimFloatPropertyConfig.ConstructorStringSingle">
            <summary>Задает оболочка совместимости FloatPropertyConfig.FloatPropertyConfig(String name, Single value)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimFloatPropertyConfig.ConstructorStringSingleSingle">
            <summary>Задает оболочка совместимости FloatPropertyConfig.FloatPropertyConfig(String name, Single value, Single defaultValue)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimFloatPropertyConfig.DefaultValueGet">
            <summary>Задает оболочка совместимости FloatPropertyConfig.get_DefaultValue()</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimFloatPropertyConfig.OnApplyValueIntPtr">
            <summary>Задает оболочка совместимости FloatPropertyConfig.OnApplyValue(IntPtr propStore)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimFloatPropertyConfig.SetDefaultValue">
            <summary>Задает оболочка совместимости FloatPropertyConfig.SetDefaultValue()</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimFloatPropertyConfig.ValueGet">
            <summary>Задает оболочка совместимости FloatPropertyConfig.get_Value()</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimFloatPropertyConfig.ValueSetSingle">
            <summary>Задает оболочка совместимости FloatPropertyConfig.set_Value(Single value)</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimGlobalKeyFrameImportConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.GlobalKeyFrameImportConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimGlobalKeyFrameImportConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimGlobalKeyFrameImportConfig.#ctor(Assimp.Configs.GlobalKeyFrameImportConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimGlobalKeyFrameImportConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimGlobalKeyFrameImportConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimGlobalKeyFrameImportConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimGlobalKeyFrameImportConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimGlobalKeyFrameImportConfig.ConstructorInt32">
            <summary>Задает оболочка совместимости GlobalKeyFrameImportConfig.GlobalKeyFrameImportConfig(Int32 keyFrame)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimGlobalKeyFrameImportConfig.GlobalKeyFrameImportConfigNameGet">
            <summary>Задает оболочка совместимости GlobalKeyFrameImportConfig.get_GlobalKeyFrameImportConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimIFCSkipCurveShapesConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.IFCSkipCurveShapesConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimIFCSkipCurveShapesConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimIFCSkipCurveShapesConfig.#ctor(Assimp.Configs.IFCSkipCurveShapesConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimIFCSkipCurveShapesConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimIFCSkipCurveShapesConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimIFCSkipCurveShapesConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimIFCSkipCurveShapesConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimIFCSkipCurveShapesConfig.ConstructorBoolean">
            <summary>Задает оболочка совместимости IFCSkipCurveShapesConfig.IFCSkipCurveShapesConfig(Boolean skipCurveShapes)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimIFCSkipCurveShapesConfig.IFCSkipCurveShapesConfigNameGet">
            <summary>Задает оболочка совместимости IFCSkipCurveShapesConfig.get_IFCSkipCurveShapesConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimIFCUseCustomTriangulationConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.IFCUseCustomTriangulationConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimIFCUseCustomTriangulationConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimIFCUseCustomTriangulationConfig.#ctor(Assimp.Configs.IFCUseCustomTriangulationConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimIFCUseCustomTriangulationConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimIFCUseCustomTriangulationConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimIFCUseCustomTriangulationConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimIFCUseCustomTriangulationConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimIFCUseCustomTriangulationConfig.ConstructorBoolean">
            <summary>Задает оболочка совместимости IFCUseCustomTriangulationConfig.IFCUseCustomTriangulationConfig(Boolean useCustomTriangulation)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimIFCUseCustomTriangulationConfig.IFCUseCustomTriangulationConfigNameGet">
            <summary>Задает оболочка совместимости IFCUseCustomTriangulationConfig.get_IFCUseCustomTriangulationConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimIRRAnimationFrameRateConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.IRRAnimationFrameRateConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimIRRAnimationFrameRateConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimIRRAnimationFrameRateConfig.#ctor(Assimp.Configs.IRRAnimationFrameRateConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimIRRAnimationFrameRateConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimIRRAnimationFrameRateConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimIRRAnimationFrameRateConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimIRRAnimationFrameRateConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimIRRAnimationFrameRateConfig.ConstructorInt32">
            <summary>Задает оболочка совместимости IRRAnimationFrameRateConfig.IRRAnimationFrameRateConfig(Int32 frameRate)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimIRRAnimationFrameRateConfig.IRRAnimationFrameRateConfigNameGet">
            <summary>Задает оболочка совместимости IRRAnimationFrameRateConfig.get_IRRAnimationFrameRateConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimIntegerPropertyConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.IntegerPropertyConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimIntegerPropertyConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimIntegerPropertyConfig.#ctor(Assimp.Configs.IntegerPropertyConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimIntegerPropertyConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimIntegerPropertyConfig.AllInstances.DefaultValueGet">
            <summary>Задает оболочка совместимости IntegerPropertyConfig.get_DefaultValue()</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimIntegerPropertyConfig.AllInstances.OnApplyValueIntPtr">
            <summary>Задает оболочка совместимости IntegerPropertyConfig.OnApplyValue(IntPtr propStore)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimIntegerPropertyConfig.AllInstances.SetDefaultValue">
            <summary>Задает оболочка совместимости IntegerPropertyConfig.SetDefaultValue()</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimIntegerPropertyConfig.AllInstances.ValueGet">
            <summary>Задает оболочка совместимости IntegerPropertyConfig.get_Value()</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimIntegerPropertyConfig.AllInstances.ValueSetInt32">
            <summary>Задает оболочка совместимости IntegerPropertyConfig.set_Value(Int32 value)</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimIntegerPropertyConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimIntegerPropertyConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimIntegerPropertyConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimIntegerPropertyConfig.ConstructorStringInt32">
            <summary>Задает оболочка совместимости IntegerPropertyConfig.IntegerPropertyConfig(String name, Int32 value)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimIntegerPropertyConfig.ConstructorStringInt32Int32">
            <summary>Задает оболочка совместимости IntegerPropertyConfig.IntegerPropertyConfig(String name, Int32 value, Int32 defaultValue)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimIntegerPropertyConfig.DefaultValueGet">
            <summary>Задает оболочка совместимости IntegerPropertyConfig.get_DefaultValue()</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimIntegerPropertyConfig.OnApplyValueIntPtr">
            <summary>Задает оболочка совместимости IntegerPropertyConfig.OnApplyValue(IntPtr propStore)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimIntegerPropertyConfig.SetDefaultValue">
            <summary>Задает оболочка совместимости IntegerPropertyConfig.SetDefaultValue()</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimIntegerPropertyConfig.ValueGet">
            <summary>Задает оболочка совместимости IntegerPropertyConfig.get_Value()</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimIntegerPropertyConfig.ValueSetInt32">
            <summary>Задает оболочка совместимости IntegerPropertyConfig.set_Value(Int32 value)</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimKeepSceneHierarchyConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.KeepSceneHierarchyConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimKeepSceneHierarchyConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimKeepSceneHierarchyConfig.#ctor(Assimp.Configs.KeepSceneHierarchyConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimKeepSceneHierarchyConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimKeepSceneHierarchyConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimKeepSceneHierarchyConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimKeepSceneHierarchyConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimKeepSceneHierarchyConfig.ConstructorBoolean">
            <summary>Задает оболочка совместимости KeepSceneHierarchyConfig.KeepSceneHierarchyConfig(Boolean keepHierarchy)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimKeepSceneHierarchyConfig.KeepSceneHierarchyConfigNameGet">
            <summary>Задает оболочка совместимости KeepSceneHierarchyConfig.get_KeepSceneHierarchyConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimLWOImportOneLayerConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.LWOImportOneLayerConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimLWOImportOneLayerConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimLWOImportOneLayerConfig.#ctor(Assimp.Configs.LWOImportOneLayerConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimLWOImportOneLayerConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimLWOImportOneLayerConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimLWOImportOneLayerConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimLWOImportOneLayerConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimLWOImportOneLayerConfig.ConstructorBoolean">
            <summary>Задает оболочка совместимости LWOImportOneLayerConfig.LWOImportOneLayerConfig(Boolean importOneLayerOnly)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimLWOImportOneLayerConfig.LWOImportOneLayerConfigNameGet">
            <summary>Задает оболочка совместимости LWOImportOneLayerConfig.get_LWOImportOneLayerConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimLWSAnimationEndConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.LWSAnimationEndConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimLWSAnimationEndConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimLWSAnimationEndConfig.#ctor(Assimp.Configs.LWSAnimationEndConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimLWSAnimationEndConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimLWSAnimationEndConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimLWSAnimationEndConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimLWSAnimationEndConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimLWSAnimationEndConfig.ConstructorInt32">
            <summary>Задает оболочка совместимости LWSAnimationEndConfig.LWSAnimationEndConfig(Int32 animEnd)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimLWSAnimationEndConfig.LWSAnimationEndConfigNameGet">
            <summary>Задает оболочка совместимости LWSAnimationEndConfig.get_LWSAnimationEndConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimLWSAnimationStartConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.LWSAnimationStartConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimLWSAnimationStartConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimLWSAnimationStartConfig.#ctor(Assimp.Configs.LWSAnimationStartConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimLWSAnimationStartConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimLWSAnimationStartConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimLWSAnimationStartConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimLWSAnimationStartConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimLWSAnimationStartConfig.ConstructorInt32">
            <summary>Задает оболочка совместимости LWSAnimationStartConfig.LWSAnimationStartConfig(Int32 animStart)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimLWSAnimationStartConfig.LWSAnimationStartConfigNameGet">
            <summary>Задает оболочка совместимости LWSAnimationStartConfig.get_LWSAnimationStartConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimMD2KeyFrameImportConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.MD2KeyFrameImportConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMD2KeyFrameImportConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMD2KeyFrameImportConfig.#ctor(Assimp.Configs.MD2KeyFrameImportConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimMD2KeyFrameImportConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMD2KeyFrameImportConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMD2KeyFrameImportConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMD2KeyFrameImportConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMD2KeyFrameImportConfig.ConstructorInt32">
            <summary>Задает оболочка совместимости MD2KeyFrameImportConfig.MD2KeyFrameImportConfig(Int32 keyFrame)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMD2KeyFrameImportConfig.MD2KeyFrameImportConfigNameGet">
            <summary>Задает оболочка совместимости MD2KeyFrameImportConfig.get_MD2KeyFrameImportConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimMD3HandleMultiPartConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.MD3HandleMultiPartConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMD3HandleMultiPartConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMD3HandleMultiPartConfig.#ctor(Assimp.Configs.MD3HandleMultiPartConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimMD3HandleMultiPartConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMD3HandleMultiPartConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMD3HandleMultiPartConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMD3HandleMultiPartConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMD3HandleMultiPartConfig.ConstructorBoolean">
            <summary>Задает оболочка совместимости MD3HandleMultiPartConfig.MD3HandleMultiPartConfig(Boolean handleMultiParts)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMD3HandleMultiPartConfig.MD3HandleMultiPartConfigNameGet">
            <summary>Задает оболочка совместимости MD3HandleMultiPartConfig.get_MD3HandleMultiPartConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimMD3KeyFrameImportConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.MD3KeyFrameImportConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMD3KeyFrameImportConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMD3KeyFrameImportConfig.#ctor(Assimp.Configs.MD3KeyFrameImportConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimMD3KeyFrameImportConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMD3KeyFrameImportConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMD3KeyFrameImportConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMD3KeyFrameImportConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMD3KeyFrameImportConfig.ConstructorInt32">
            <summary>Задает оболочка совместимости MD3KeyFrameImportConfig.MD3KeyFrameImportConfig(Int32 keyFrame)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMD3KeyFrameImportConfig.MD3KeyFrameImportConfigNameGet">
            <summary>Задает оболочка совместимости MD3KeyFrameImportConfig.get_MD3KeyFrameImportConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimMD3ShaderSourceConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.MD3ShaderSourceConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMD3ShaderSourceConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMD3ShaderSourceConfig.#ctor(Assimp.Configs.MD3ShaderSourceConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimMD3ShaderSourceConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMD3ShaderSourceConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMD3ShaderSourceConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMD3ShaderSourceConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMD3ShaderSourceConfig.ConstructorString">
            <summary>Задает оболочка совместимости MD3ShaderSourceConfig.MD3ShaderSourceConfig(String shaderFile)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMD3ShaderSourceConfig.MD3ShaderSourceConfigNameGet">
            <summary>Задает оболочка совместимости MD3ShaderSourceConfig.get_MD3ShaderSourceConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimMD3SkinNameConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.MD3SkinNameConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMD3SkinNameConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMD3SkinNameConfig.#ctor(Assimp.Configs.MD3SkinNameConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimMD3SkinNameConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMD3SkinNameConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMD3SkinNameConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMD3SkinNameConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMD3SkinNameConfig.ConstructorString">
            <summary>Задает оболочка совместимости MD3SkinNameConfig.MD3SkinNameConfig(String skinName)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMD3SkinNameConfig.MD3SkinNameConfigNameGet">
            <summary>Задает оболочка совместимости MD3SkinNameConfig.get_MD3SkinNameConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimMD5NoAnimationAutoLoadConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.MD5NoAnimationAutoLoadConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMD5NoAnimationAutoLoadConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMD5NoAnimationAutoLoadConfig.#ctor(Assimp.Configs.MD5NoAnimationAutoLoadConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimMD5NoAnimationAutoLoadConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMD5NoAnimationAutoLoadConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMD5NoAnimationAutoLoadConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMD5NoAnimationAutoLoadConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMD5NoAnimationAutoLoadConfig.ConstructorBoolean">
            <summary>Задает оболочка совместимости MD5NoAnimationAutoLoadConfig.MD5NoAnimationAutoLoadConfig(Boolean noAutoLoadAnim)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMD5NoAnimationAutoLoadConfig.MD5NoAnimationAutoLoadConfigNameGet">
            <summary>Задает оболочка совместимости MD5NoAnimationAutoLoadConfig.get_MD5NoAnimationAutoLoadConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimMDLColorMapConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.MDLColorMapConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMDLColorMapConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMDLColorMapConfig.#ctor(Assimp.Configs.MDLColorMapConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimMDLColorMapConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMDLColorMapConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMDLColorMapConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMDLColorMapConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMDLColorMapConfig.ConstructorString">
            <summary>Задает оболочка совместимости MDLColorMapConfig.MDLColorMapConfig(String fileName)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMDLColorMapConfig.MDLColorMapConfigNameGet">
            <summary>Задает оболочка совместимости MDLColorMapConfig.get_MDLColorMapConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimMDLKeyFrameImportConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.MDLKeyFrameImportConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMDLKeyFrameImportConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMDLKeyFrameImportConfig.#ctor(Assimp.Configs.MDLKeyFrameImportConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimMDLKeyFrameImportConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMDLKeyFrameImportConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMDLKeyFrameImportConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMDLKeyFrameImportConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMDLKeyFrameImportConfig.ConstructorInt32">
            <summary>Задает оболочка совместимости MDLKeyFrameImportConfig.MDLKeyFrameImportConfig(Int32 keyFrame)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMDLKeyFrameImportConfig.MDLKeyFrameImportConfigNameGet">
            <summary>Задает оболочка совместимости MDLKeyFrameImportConfig.get_MDLKeyFrameImportConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimMaterialExcludeListConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.MaterialExcludeListConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMaterialExcludeListConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMaterialExcludeListConfig.#ctor(Assimp.Configs.MaterialExcludeListConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimMaterialExcludeListConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMaterialExcludeListConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMaterialExcludeListConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMaterialExcludeListConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMaterialExcludeListConfig.ConstructorStringArray">
            <summary>Задает оболочка совместимости MaterialExcludeListConfig.MaterialExcludeListConfig(String[] materialNames)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMaterialExcludeListConfig.MaterialExcludeListConfigNameGet">
            <summary>Задает оболочка совместимости MaterialExcludeListConfig.get_MaterialExcludeListConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimMaxBoneCountConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.MaxBoneCountConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMaxBoneCountConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMaxBoneCountConfig.#ctor(Assimp.Configs.MaxBoneCountConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimMaxBoneCountConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMaxBoneCountConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMaxBoneCountConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMaxBoneCountConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMaxBoneCountConfig.ConstructorInt32">
            <summary>Задает оболочка совместимости MaxBoneCountConfig.MaxBoneCountConfig(Int32 maxBones)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMaxBoneCountConfig.MaxBoneCountConfigNameGet">
            <summary>Задает оболочка совместимости MaxBoneCountConfig.get_MaxBoneCountConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimMeasureTimeConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.MeasureTimeConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMeasureTimeConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMeasureTimeConfig.#ctor(Assimp.Configs.MeasureTimeConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimMeasureTimeConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMeasureTimeConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMeasureTimeConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMeasureTimeConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMeasureTimeConfig.ConstructorBoolean">
            <summary>Задает оболочка совместимости MeasureTimeConfig.MeasureTimeConfig(Boolean measureTime)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMeasureTimeConfig.MeasureTimeConfigNameGet">
            <summary>Задает оболочка совместимости MeasureTimeConfig.get_MeasureTimeConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimMeshTriangleLimitConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.MeshTriangleLimitConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMeshTriangleLimitConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMeshTriangleLimitConfig.#ctor(Assimp.Configs.MeshTriangleLimitConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimMeshTriangleLimitConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMeshTriangleLimitConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMeshTriangleLimitConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMeshTriangleLimitConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMeshTriangleLimitConfig.ConstructorInt32">
            <summary>Задает оболочка совместимости MeshTriangleLimitConfig.MeshTriangleLimitConfig(Int32 maxTriangleLimit)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMeshTriangleLimitConfig.MeshTriangleLimitConfigDefaultValueGet">
            <summary>Задает оболочка совместимости MeshTriangleLimitConfig.get_MeshTriangleLimitConfigDefaultValue()</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMeshTriangleLimitConfig.MeshTriangleLimitConfigNameGet">
            <summary>Задает оболочка совместимости MeshTriangleLimitConfig.get_MeshTriangleLimitConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimMeshVertexLimitConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.MeshVertexLimitConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMeshVertexLimitConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMeshVertexLimitConfig.#ctor(Assimp.Configs.MeshVertexLimitConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimMeshVertexLimitConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMeshVertexLimitConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMeshVertexLimitConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMeshVertexLimitConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMeshVertexLimitConfig.ConstructorInt32">
            <summary>Задает оболочка совместимости MeshVertexLimitConfig.MeshVertexLimitConfig(Int32 maxVertexLimit)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMeshVertexLimitConfig.MeshVertexLimitConfigDefaultValueGet">
            <summary>Задает оболочка совместимости MeshVertexLimitConfig.get_MeshVertexLimitConfigDefaultValue()</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMeshVertexLimitConfig.MeshVertexLimitConfigNameGet">
            <summary>Задает оболочка совместимости MeshVertexLimitConfig.get_MeshVertexLimitConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimMultithreadingConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.MultithreadingConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMultithreadingConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMultithreadingConfig.#ctor(Assimp.Configs.MultithreadingConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimMultithreadingConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMultithreadingConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimMultithreadingConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMultithreadingConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMultithreadingConfig.ConstructorInt32">
            <summary>Задает оболочка совместимости MultithreadingConfig.MultithreadingConfig(Int32 value)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimMultithreadingConfig.MultithreadingConfigNameGet">
            <summary>Задает оболочка совместимости MultithreadingConfig.get_MultithreadingConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimNodeExcludeListConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.NodeExcludeListConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimNodeExcludeListConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimNodeExcludeListConfig.#ctor(Assimp.Configs.NodeExcludeListConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimNodeExcludeListConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimNodeExcludeListConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimNodeExcludeListConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimNodeExcludeListConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimNodeExcludeListConfig.ConstructorStringArray">
            <summary>Задает оболочка совместимости NodeExcludeListConfig.NodeExcludeListConfig(String[] nodeNames)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimNodeExcludeListConfig.NodeExcludeListConfigNameGet">
            <summary>Задает оболочка совместимости NodeExcludeListConfig.get_NodeExcludeListConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimNormalSmoothingAngleConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.NormalSmoothingAngleConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimNormalSmoothingAngleConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimNormalSmoothingAngleConfig.#ctor(Assimp.Configs.NormalSmoothingAngleConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimNormalSmoothingAngleConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimNormalSmoothingAngleConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimNormalSmoothingAngleConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimNormalSmoothingAngleConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimNormalSmoothingAngleConfig.ConstructorSingle">
            <summary>Задает оболочка совместимости NormalSmoothingAngleConfig.NormalSmoothingAngleConfig(Single angle)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimNormalSmoothingAngleConfig.NormalSmoothingAngleConfigNameGet">
            <summary>Задает оболочка совместимости NormalSmoothingAngleConfig.get_NormalSmoothingAngleConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimNormalizeVertexComponentsConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.NormalizeVertexComponentsConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimNormalizeVertexComponentsConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimNormalizeVertexComponentsConfig.#ctor(Assimp.Configs.NormalizeVertexComponentsConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimNormalizeVertexComponentsConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimNormalizeVertexComponentsConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimNormalizeVertexComponentsConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimNormalizeVertexComponentsConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimNormalizeVertexComponentsConfig.ConstructorBoolean">
            <summary>Задает оболочка совместимости NormalizeVertexComponentsConfig.NormalizeVertexComponentsConfig(Boolean normalizeVertexComponents)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimNormalizeVertexComponentsConfig.NormalizeVertexComponentsConfigNameGet">
            <summary>Задает оболочка совместимости NormalizeVertexComponentsConfig.get_NormalizeVertexComponentsConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimOgreMaterialFileConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.OgreMaterialFileConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimOgreMaterialFileConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimOgreMaterialFileConfig.#ctor(Assimp.Configs.OgreMaterialFileConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimOgreMaterialFileConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimOgreMaterialFileConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimOgreMaterialFileConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimOgreMaterialFileConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimOgreMaterialFileConfig.ConstructorString">
            <summary>Задает оболочка совместимости OgreMaterialFileConfig.OgreMaterialFileConfig(String materialFileName)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimOgreMaterialFileConfig.OgreMaterialFileConfigNameGet">
            <summary>Задает оболочка совместимости OgreMaterialFileConfig.get_OgreMaterialFileConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimOgreTextureTypeFromFilenameConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.OgreTextureTypeFromFilenameConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimOgreTextureTypeFromFilenameConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimOgreTextureTypeFromFilenameConfig.#ctor(Assimp.Configs.OgreTextureTypeFromFilenameConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimOgreTextureTypeFromFilenameConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimOgreTextureTypeFromFilenameConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimOgreTextureTypeFromFilenameConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimOgreTextureTypeFromFilenameConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimOgreTextureTypeFromFilenameConfig.ConstructorBoolean">
            <summary>Задает оболочка совместимости OgreTextureTypeFromFilenameConfig.OgreTextureTypeFromFilenameConfig(Boolean fileNameDefinesTextureUsage)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimOgreTextureTypeFromFilenameConfig.OgreTextureTypeFromFilenameConfigNameGet">
            <summary>Задает оболочка совместимости OgreTextureTypeFromFilenameConfig.get_OgreTextureTypeFromFilenameConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimPropertyConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.PropertyConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimPropertyConfig.#ctor(Assimp.Configs.PropertyConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimPropertyConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimPropertyConfig.AllInstances.ApplyValueIntPtr">
            <summary>Задает оболочка совместимости PropertyConfig.ApplyValue(IntPtr propStore)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimPropertyConfig.AllInstances.NameGet">
            <summary>Задает оболочка совместимости PropertyConfig.get_Name()</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimPropertyConfig.ApplyValueIntPtr">
            <summary>Задает оболочка совместимости PropertyConfig.ApplyValue(IntPtr propStore)</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimPropertyConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimPropertyConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimPropertyConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimPropertyConfig.ConstructorString">
            <summary>Задает оболочка совместимости PropertyConfig.PropertyConfig(String name)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimPropertyConfig.NameGet">
            <summary>Задает оболочка совместимости PropertyConfig.get_Name()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimRemoveComponentConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.RemoveComponentConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimRemoveComponentConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimRemoveComponentConfig.#ctor(Assimp.Configs.RemoveComponentConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimRemoveComponentConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimRemoveComponentConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimRemoveComponentConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimRemoveComponentConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimRemoveComponentConfig.ConstructorExcludeComponent">
            <summary>Задает оболочка совместимости RemoveComponentConfig.RemoveComponentConfig(ExcludeComponent componentsToExclude)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimRemoveComponentConfig.RemoveComponentConfigNameGet">
            <summary>Задает оболочка совместимости RemoveComponentConfig.get_RemoveComponentConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimRemoveDegeneratePrimitivesConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.RemoveDegeneratePrimitivesConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimRemoveDegeneratePrimitivesConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimRemoveDegeneratePrimitivesConfig.#ctor(Assimp.Configs.RemoveDegeneratePrimitivesConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimRemoveDegeneratePrimitivesConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimRemoveDegeneratePrimitivesConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimRemoveDegeneratePrimitivesConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimRemoveDegeneratePrimitivesConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimRemoveDegeneratePrimitivesConfig.ConstructorBoolean">
            <summary>Задает оболочка совместимости RemoveDegeneratePrimitivesConfig.RemoveDegeneratePrimitivesConfig(Boolean removeDegenerates)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimRemoveDegeneratePrimitivesConfig.RemoveDegeneratePrimitivesConfigNameGet">
            <summary>Задает оболочка совместимости RemoveDegeneratePrimitivesConfig.get_RemoveDegeneratePrimitivesConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimSMDKeyFrameImportConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.SMDKeyFrameImportConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimSMDKeyFrameImportConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimSMDKeyFrameImportConfig.#ctor(Assimp.Configs.SMDKeyFrameImportConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimSMDKeyFrameImportConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimSMDKeyFrameImportConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimSMDKeyFrameImportConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimSMDKeyFrameImportConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimSMDKeyFrameImportConfig.ConstructorInt32">
            <summary>Задает оболочка совместимости SMDKeyFrameImportConfig.SMDKeyFrameImportConfig(Int32 keyFrame)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimSMDKeyFrameImportConfig.SMDKeyFrameImportConfigNameGet">
            <summary>Задает оболочка совместимости SMDKeyFrameImportConfig.get_SMDKeyFrameImportConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimSortByPrimitiveTypeConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.SortByPrimitiveTypeConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimSortByPrimitiveTypeConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimSortByPrimitiveTypeConfig.#ctor(Assimp.Configs.SortByPrimitiveTypeConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimSortByPrimitiveTypeConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimSortByPrimitiveTypeConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimSortByPrimitiveTypeConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimSortByPrimitiveTypeConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimSortByPrimitiveTypeConfig.ConstructorPrimitiveType">
            <summary>Задает оболочка совместимости SortByPrimitiveTypeConfig.SortByPrimitiveTypeConfig(PrimitiveType typesToRemove)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimSortByPrimitiveTypeConfig.SortByPrimitiveTypeConfigNameGet">
            <summary>Задает оболочка совместимости SortByPrimitiveTypeConfig.get_SortByPrimitiveTypeConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimStringPropertyConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.StringPropertyConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimStringPropertyConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimStringPropertyConfig.#ctor(Assimp.Configs.StringPropertyConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimStringPropertyConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimStringPropertyConfig.AllInstances.DefaultValueGet">
            <summary>Задает оболочка совместимости StringPropertyConfig.get_DefaultValue()</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimStringPropertyConfig.AllInstances.OnApplyValueIntPtr">
            <summary>Задает оболочка совместимости StringPropertyConfig.OnApplyValue(IntPtr propStore)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimStringPropertyConfig.AllInstances.SetDefaultValue">
            <summary>Задает оболочка совместимости StringPropertyConfig.SetDefaultValue()</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimStringPropertyConfig.AllInstances.ValueGet">
            <summary>Задает оболочка совместимости StringPropertyConfig.get_Value()</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimStringPropertyConfig.AllInstances.ValueSetString">
            <summary>Задает оболочка совместимости StringPropertyConfig.set_Value(String value)</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimStringPropertyConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimStringPropertyConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimStringPropertyConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimStringPropertyConfig.ConstructorStringString">
            <summary>Задает оболочка совместимости StringPropertyConfig.StringPropertyConfig(String name, String value)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimStringPropertyConfig.ConstructorStringStringString">
            <summary>Задает оболочка совместимости StringPropertyConfig.StringPropertyConfig(String name, String value, String defaultValue)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimStringPropertyConfig.DefaultValueGet">
            <summary>Задает оболочка совместимости StringPropertyConfig.get_DefaultValue()</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimStringPropertyConfig.OnApplyValueIntPtr">
            <summary>Задает оболочка совместимости StringPropertyConfig.OnApplyValue(IntPtr propStore)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimStringPropertyConfig.ProcessNamesStringArray">
            <summary>Задает оболочка совместимости StringPropertyConfig.ProcessNames(String[] names)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimStringPropertyConfig.SetDefaultValue">
            <summary>Задает оболочка совместимости StringPropertyConfig.SetDefaultValue()</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimStringPropertyConfig.ValueGet">
            <summary>Задает оболочка совместимости StringPropertyConfig.get_Value()</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimStringPropertyConfig.ValueSetString">
            <summary>Задает оболочка совместимости StringPropertyConfig.set_Value(String value)</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimTangentSmoothingAngleConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.TangentSmoothingAngleConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimTangentSmoothingAngleConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimTangentSmoothingAngleConfig.#ctor(Assimp.Configs.TangentSmoothingAngleConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimTangentSmoothingAngleConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimTangentSmoothingAngleConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimTangentSmoothingAngleConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimTangentSmoothingAngleConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimTangentSmoothingAngleConfig.ConstructorSingle">
            <summary>Задает оболочка совместимости TangentSmoothingAngleConfig.TangentSmoothingAngleConfig(Single angle)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimTangentSmoothingAngleConfig.TangentSmoothingAngleConfigNameGet">
            <summary>Задает оболочка совместимости TangentSmoothingAngleConfig.get_TangentSmoothingAngleConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimTangentTextureChannelIndexConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.TangentTextureChannelIndexConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimTangentTextureChannelIndexConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimTangentTextureChannelIndexConfig.#ctor(Assimp.Configs.TangentTextureChannelIndexConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimTangentTextureChannelIndexConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimTangentTextureChannelIndexConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimTangentTextureChannelIndexConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimTangentTextureChannelIndexConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimTangentTextureChannelIndexConfig.ConstructorInt32">
            <summary>Задает оболочка совместимости TangentTextureChannelIndexConfig.TangentTextureChannelIndexConfig(Int32 textureChannelIndex)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimTangentTextureChannelIndexConfig.TangentTextureChannelIndexConfigNameGet">
            <summary>Задает оболочка совместимости TangentTextureChannelIndexConfig.get_TangentTextureChannelIndexConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimTerragenComputeTexCoordsConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.TerragenComputeTexCoordsConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimTerragenComputeTexCoordsConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimTerragenComputeTexCoordsConfig.#ctor(Assimp.Configs.TerragenComputeTexCoordsConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimTerragenComputeTexCoordsConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimTerragenComputeTexCoordsConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimTerragenComputeTexCoordsConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimTerragenComputeTexCoordsConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimTerragenComputeTexCoordsConfig.ConstructorBoolean">
            <summary>Задает оболочка совместимости TerragenComputeTexCoordsConfig.TerragenComputeTexCoordsConfig(Boolean computeTexCoords)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimTerragenComputeTexCoordsConfig.TerragenComputeTexCoordsConfigNameGet">
            <summary>Задает оболочка совместимости TerragenComputeTexCoordsConfig.get_TerragenComputeTexCoordsConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimTransformUVConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.TransformUVConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimTransformUVConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimTransformUVConfig.#ctor(Assimp.Configs.TransformUVConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimTransformUVConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimTransformUVConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimTransformUVConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimTransformUVConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimTransformUVConfig.ConstructorUVTransformFlags">
            <summary>Задает оболочка совместимости TransformUVConfig.TransformUVConfig(UVTransformFlags transformFlags)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimTransformUVConfig.TransformUVConfigNameGet">
            <summary>Задает оболочка совместимости TransformUVConfig.get_TransformUVConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimUnrealHandleFlagsConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.UnrealHandleFlagsConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimUnrealHandleFlagsConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimUnrealHandleFlagsConfig.#ctor(Assimp.Configs.UnrealHandleFlagsConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimUnrealHandleFlagsConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimUnrealHandleFlagsConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimUnrealHandleFlagsConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimUnrealHandleFlagsConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimUnrealHandleFlagsConfig.ConstructorBoolean">
            <summary>Задает оболочка совместимости UnrealHandleFlagsConfig.UnrealHandleFlagsConfig(Boolean handleFlags)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimUnrealHandleFlagsConfig.UnrealHandleFlagsConfigNameGet">
            <summary>Задает оболочка совместимости UnrealHandleFlagsConfig.get_UnrealHandleFlagsConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimUnrealKeyFrameImportConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.UnrealKeyFrameImportConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimUnrealKeyFrameImportConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimUnrealKeyFrameImportConfig.#ctor(Assimp.Configs.UnrealKeyFrameImportConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimUnrealKeyFrameImportConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimUnrealKeyFrameImportConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimUnrealKeyFrameImportConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimUnrealKeyFrameImportConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimUnrealKeyFrameImportConfig.ConstructorInt32">
            <summary>Задает оболочка совместимости UnrealKeyFrameImportConfig.UnrealKeyFrameImportConfig(Int32 keyFrame)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimUnrealKeyFrameImportConfig.UnrealKeyFrameImportConfigNameGet">
            <summary>Задает оболочка совместимости UnrealKeyFrameImportConfig.get_UnrealKeyFrameImportConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimVertexBoneWeightLimitConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.VertexBoneWeightLimitConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimVertexBoneWeightLimitConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimVertexBoneWeightLimitConfig.#ctor(Assimp.Configs.VertexBoneWeightLimitConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimVertexBoneWeightLimitConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimVertexBoneWeightLimitConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimVertexBoneWeightLimitConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimVertexBoneWeightLimitConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimVertexBoneWeightLimitConfig.ConstructorInt32">
            <summary>Задает оболочка совместимости VertexBoneWeightLimitConfig.VertexBoneWeightLimitConfig(Int32 maxBoneWeights)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimVertexBoneWeightLimitConfig.VertexBoneWeightLimitConfigDefaultValueGet">
            <summary>Задает оболочка совместимости VertexBoneWeightLimitConfig.get_VertexBoneWeightLimitConfigDefaultValue()</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimVertexBoneWeightLimitConfig.VertexBoneWeightLimitConfigNameGet">
            <summary>Задает оболочка совместимости VertexBoneWeightLimitConfig.get_VertexBoneWeightLimitConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimVertexCacheSizeConfig">
            <summary>Тип оболочки совместимости для Assimp.Configs.VertexCacheSizeConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimVertexCacheSizeConfig.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimVertexCacheSizeConfig.#ctor(Assimp.Configs.VertexCacheSizeConfig)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.ShimVertexCacheSizeConfig.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimVertexCacheSizeConfig.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.ShimVertexCacheSizeConfig.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimVertexCacheSizeConfig.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimVertexCacheSizeConfig.ConstructorInt32">
            <summary>Задает оболочка совместимости VertexCacheSizeConfig.VertexCacheSizeConfig(Int32 vertexCacheSize)</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimVertexCacheSizeConfig.VertexCacheSizeConfigDefaultValueGet">
            <summary>Задает оболочка совместимости VertexCacheSizeConfig.get_VertexCacheSizeConfigDefaultValue()</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.ShimVertexCacheSizeConfig.VertexCacheSizeConfigNameGet">
            <summary>Задает оболочка совместимости VertexCacheSizeConfig.get_VertexCacheSizeConfigName()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.StubBooleanPropertyConfig">
            <summary>Тип заглушки Assimp.Configs.BooleanPropertyConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.StubBooleanPropertyConfig.#ctor(System.String,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.StubBooleanPropertyConfig.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.StubBooleanPropertyConfig.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.StubBooleanPropertyConfig.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubBooleanPropertyConfig</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.StubBooleanPropertyConfig.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.StubBooleanPropertyConfig.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.StubBooleanPropertyConfig.OnApplyValue(System.IntPtr)">
            <summary>Задает заглушка BooleanPropertyConfig.OnApplyValue(IntPtr propStore)</summary>
        </member>
        <member name="F:Assimp.Configs.Fakes.StubBooleanPropertyConfig.OnApplyValueIntPtr">
            <summary>Задает stub BooleanPropertyConfig.OnApplyValue(IntPtr propStore)</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.StubBooleanPropertyConfig.SetDefaultValue">
            <summary>Задает заглушка BooleanPropertyConfig.SetDefaultValue()</summary>
        </member>
        <member name="F:Assimp.Configs.Fakes.StubBooleanPropertyConfig.SetDefaultValue01">
            <summary>Задает stub BooleanPropertyConfig.SetDefaultValue()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.StubFloatPropertyConfig">
            <summary>Тип заглушки Assimp.Configs.FloatPropertyConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.StubFloatPropertyConfig.#ctor(System.String,System.Single)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.StubFloatPropertyConfig.#ctor(System.String,System.Single,System.Single)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.StubFloatPropertyConfig.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.StubFloatPropertyConfig.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubFloatPropertyConfig</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.StubFloatPropertyConfig.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.StubFloatPropertyConfig.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.StubFloatPropertyConfig.OnApplyValue(System.IntPtr)">
            <summary>Задает заглушка FloatPropertyConfig.OnApplyValue(IntPtr propStore)</summary>
        </member>
        <member name="F:Assimp.Configs.Fakes.StubFloatPropertyConfig.OnApplyValueIntPtr">
            <summary>Задает stub FloatPropertyConfig.OnApplyValue(IntPtr propStore)</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.StubFloatPropertyConfig.SetDefaultValue">
            <summary>Задает заглушка FloatPropertyConfig.SetDefaultValue()</summary>
        </member>
        <member name="F:Assimp.Configs.Fakes.StubFloatPropertyConfig.SetDefaultValue01">
            <summary>Задает stub FloatPropertyConfig.SetDefaultValue()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.StubIntegerPropertyConfig">
            <summary>Тип заглушки Assimp.Configs.IntegerPropertyConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.StubIntegerPropertyConfig.#ctor(System.String,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.StubIntegerPropertyConfig.#ctor(System.String,System.Int32,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.StubIntegerPropertyConfig.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.StubIntegerPropertyConfig.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubIntegerPropertyConfig</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.StubIntegerPropertyConfig.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.StubIntegerPropertyConfig.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.StubIntegerPropertyConfig.OnApplyValue(System.IntPtr)">
            <summary>Задает заглушка IntegerPropertyConfig.OnApplyValue(IntPtr propStore)</summary>
        </member>
        <member name="F:Assimp.Configs.Fakes.StubIntegerPropertyConfig.OnApplyValueIntPtr">
            <summary>Задает stub IntegerPropertyConfig.OnApplyValue(IntPtr propStore)</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.StubIntegerPropertyConfig.SetDefaultValue">
            <summary>Задает заглушка IntegerPropertyConfig.SetDefaultValue()</summary>
        </member>
        <member name="F:Assimp.Configs.Fakes.StubIntegerPropertyConfig.SetDefaultValue01">
            <summary>Задает stub IntegerPropertyConfig.SetDefaultValue()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.StubPropertyConfig">
            <summary>Тип заглушки Assimp.Configs.PropertyConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.StubPropertyConfig.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.StubPropertyConfig.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.StubPropertyConfig.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubPropertyConfig</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.StubPropertyConfig.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.StubPropertyConfig.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.StubPropertyConfig.OnApplyValue(System.IntPtr)">
            <summary>Задает заглушка PropertyConfig.OnApplyValue(IntPtr propStore)</summary>
        </member>
        <member name="F:Assimp.Configs.Fakes.StubPropertyConfig.OnApplyValueIntPtr">
            <summary>Задает stub PropertyConfig.OnApplyValue(IntPtr propStore)</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.StubPropertyConfig.SetDefaultValue">
            <summary>Задает заглушка PropertyConfig.SetDefaultValue()</summary>
        </member>
        <member name="F:Assimp.Configs.Fakes.StubPropertyConfig.SetDefaultValue01">
            <summary>Задает stub PropertyConfig.SetDefaultValue()</summary>
        </member>
        <member name="T:Assimp.Configs.Fakes.StubStringPropertyConfig">
            <summary>Тип заглушки Assimp.Configs.StringPropertyConfig</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.StubStringPropertyConfig.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.StubStringPropertyConfig.#ctor(System.String,System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.StubStringPropertyConfig.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.StubStringPropertyConfig.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubStringPropertyConfig</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.StubStringPropertyConfig.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:Assimp.Configs.Fakes.StubStringPropertyConfig.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.StubStringPropertyConfig.OnApplyValue(System.IntPtr)">
            <summary>Задает заглушка StringPropertyConfig.OnApplyValue(IntPtr propStore)</summary>
        </member>
        <member name="F:Assimp.Configs.Fakes.StubStringPropertyConfig.OnApplyValueIntPtr">
            <summary>Задает stub StringPropertyConfig.OnApplyValue(IntPtr propStore)</summary>
        </member>
        <member name="M:Assimp.Configs.Fakes.StubStringPropertyConfig.SetDefaultValue">
            <summary>Задает заглушка StringPropertyConfig.SetDefaultValue()</summary>
        </member>
        <member name="F:Assimp.Configs.Fakes.StubStringPropertyConfig.SetDefaultValue01">
            <summary>Задает stub StringPropertyConfig.SetDefaultValue()</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimAnimation">
            <summary>Тип оболочки совместимости для Assimp.Animation</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimAnimation.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimAnimation.#ctor(Assimp.Animation)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimAnimation.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAnimation.AllInstances.DurationInTicksGet">
            <summary>Задает оболочка совместимости Animation.get_DurationInTicks()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAnimation.AllInstances.HasMeshAnimationsGet">
            <summary>Задает оболочка совместимости Animation.get_HasMeshAnimations()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAnimation.AllInstances.HasNodeAnimationsGet">
            <summary>Задает оболочка совместимости Animation.get_HasNodeAnimations()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAnimation.AllInstances.MeshAnimationChannelCountGet">
            <summary>Задает оболочка совместимости Animation.get_MeshAnimationChannelCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAnimation.AllInstances.MeshAnimationChannelsGet">
            <summary>Задает оболочка совместимости Animation.get_MeshAnimationChannels()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAnimation.AllInstances.NameGet">
            <summary>Задает оболочка совместимости Animation.get_Name()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAnimation.AllInstances.NodeAnimationChannelCountGet">
            <summary>Задает оболочка совместимости Animation.get_NodeAnimationChannelCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAnimation.AllInstances.NodeAnimationChannelsGet">
            <summary>Задает оболочка совместимости Animation.get_NodeAnimationChannels()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAnimation.AllInstances.TicksPerSecondGet">
            <summary>Задает оболочка совместимости Animation.get_TicksPerSecond()</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimAnimation.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimAnimation.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAnimation.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAnimation.ConstructorAiAnimationRef">
            <summary>Задает оболочка совместимости Animation.Animation(AiAnimation&amp; animation)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAnimation.DurationInTicksGet">
            <summary>Задает оболочка совместимости Animation.get_DurationInTicks()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAnimation.HasMeshAnimationsGet">
            <summary>Задает оболочка совместимости Animation.get_HasMeshAnimations()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAnimation.HasNodeAnimationsGet">
            <summary>Задает оболочка совместимости Animation.get_HasNodeAnimations()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAnimation.MeshAnimationChannelCountGet">
            <summary>Задает оболочка совместимости Animation.get_MeshAnimationChannelCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAnimation.MeshAnimationChannelsGet">
            <summary>Задает оболочка совместимости Animation.get_MeshAnimationChannels()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAnimation.NameGet">
            <summary>Задает оболочка совместимости Animation.get_Name()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAnimation.NodeAnimationChannelCountGet">
            <summary>Задает оболочка совместимости Animation.get_NodeAnimationChannelCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAnimation.NodeAnimationChannelsGet">
            <summary>Задает оболочка совместимости Animation.get_NodeAnimationChannels()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAnimation.TicksPerSecondGet">
            <summary>Задает оболочка совместимости Animation.get_TicksPerSecond()</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimAssimpException">
            <summary>Тип оболочки совместимости для Assimp.AssimpException</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimAssimpException.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimAssimpException.#ctor(Assimp.AssimpException)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimAssimpException.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimAssimpException.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimAssimpException.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpException.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimAssimpException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpException.Constructor">
            <summary>Задает оболочка совместимости AssimpException.AssimpException()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpException.ConstructorString">
            <summary>Задает оболочка совместимости AssimpException.AssimpException(String msg)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpException.ConstructorStringException">
            <summary>Задает оболочка совместимости AssimpException.AssimpException(String msg, Exception innerException)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpException.ConstructorStringString">
            <summary>Задает оболочка совместимости AssimpException.AssimpException(String paramName, String msg)</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimAssimpImporter">
            <summary>Тип оболочки совместимости для Assimp.AssimpImporter</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimAssimpImporter.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimAssimpImporter.#ctor(Assimp.AssimpImporter)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimAssimpImporter.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.AttachLogStreamLogStream">
            <summary>Задает оболочка совместимости AssimpImporter.AttachLogStream(LogStream logstream)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.AttachLogs">
            <summary>Задает оболочка совместимости AssimpImporter.AttachLogs()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.BuildMatrix">
            <summary>Задает оболочка совместимости AssimpImporter.BuildMatrix()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.CleanupImport">
            <summary>Задает оболочка совместимости AssimpImporter.CleanupImport()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.ContainsConfigString">
            <summary>Задает оболочка совместимости AssimpImporter.ContainsConfig(String configName)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.ConvertFromFileToBlobStringPostProcessStepsStringPostProcessSteps">
            <summary>Задает оболочка совместимости AssimpImporter.ConvertFromFileToBlob(String inputFilename, PostProcessSteps importProcessSteps, String exportFormatId, PostProcessSteps exportProcessSteps)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.ConvertFromFileToBlobStringString">
            <summary>Задает оболочка совместимости AssimpImporter.ConvertFromFileToBlob(String inputFilename, String exportFormatId)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.ConvertFromFileToBlobStringStringPostProcessSteps">
            <summary>Задает оболочка совместимости AssimpImporter.ConvertFromFileToBlob(String inputFilename, String exportFormatId, PostProcessSteps exportProcessSteps)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.ConvertFromFileToFileStringPostProcessStepsStringStringPostProcessSteps">
            <summary>Задает оболочка совместимости AssimpImporter.ConvertFromFileToFile(String inputFilename, PostProcessSteps importProcessSteps, String outputFilename, String exportFormatId, PostProcessSteps exportProcessSteps)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.ConvertFromFileToFileStringStringString">
            <summary>Задает оболочка совместимости AssimpImporter.ConvertFromFileToFile(String inputFilename, String outputFilename, String exportFormatId)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.ConvertFromFileToFileStringStringStringPostProcessSteps">
            <summary>Задает оболочка совместимости AssimpImporter.ConvertFromFileToFile(String inputFilename, String outputFilename, String exportFormatId, PostProcessSteps exportProcessSteps)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.ConvertFromStreamToBlobStreamStringPostProcessStepsStringPostProcessSteps">
            <summary>Задает оболочка совместимости AssimpImporter.ConvertFromStreamToBlob(Stream inputStream, String importFormatHint, PostProcessSteps importProcessSteps, String exportFormatId, PostProcessSteps exportProcessSteps)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.ConvertFromStreamToBlobStreamStringString">
            <summary>Задает оболочка совместимости AssimpImporter.ConvertFromStreamToBlob(Stream inputStream, String importFormatHint, String exportFormatId)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.ConvertFromStreamToBlobStreamStringStringPostProcessSteps">
            <summary>Задает оболочка совместимости AssimpImporter.ConvertFromStreamToBlob(Stream inputStream, String importFormatHint, String exportFormatId, PostProcessSteps exportProcessSteps)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.ConvertFromStreamToFileStreamStringPostProcessStepsStringStringPostProcessSteps">
            <summary>Задает оболочка совместимости AssimpImporter.ConvertFromStreamToFile(Stream inputStream, String importFormatHint, PostProcessSteps importProcessSteps, String outputFilename, String exportFormatId, PostProcessSteps exportProcessSteps)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.ConvertFromStreamToFileStreamStringStringString">
            <summary>Задает оболочка совместимости AssimpImporter.ConvertFromStreamToFile(Stream inputStream, String importFormatHint, String outputFilename, String exportFormatId)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.ConvertFromStreamToFileStreamStringStringStringPostProcessSteps">
            <summary>Задает оболочка совместимости AssimpImporter.ConvertFromStreamToFile(Stream inputStream, String importFormatHint, String outputFilename, String exportFormatId, PostProcessSteps exportProcessSteps)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.CreateConfigs">
            <summary>Задает оболочка совместимости AssimpImporter.CreateConfigs()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.DetachLogStreamLogStream">
            <summary>Задает оболочка совместимости AssimpImporter.DetachLogStream(LogStream logStream)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.DetachLogStreams">
            <summary>Задает оболочка совместимости AssimpImporter.DetachLogStreams()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.DetatachLogs">
            <summary>Задает оболочка совместимости AssimpImporter.DetatachLogs()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.Dispose">
            <summary>Задает оболочка совместимости AssimpImporter.Dispose()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.DisposeBoolean">
            <summary>Задает оболочка совместимости AssimpImporter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.GetSupportedExportFormats">
            <summary>Задает оболочка совместимости AssimpImporter.GetSupportedExportFormats()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.GetSupportedImportFormats">
            <summary>Задает оболочка совместимости AssimpImporter.GetSupportedImportFormats()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.ImportFileFromStreamStreamPostProcessStepsString">
            <summary>Задает оболочка совместимости AssimpImporter.ImportFileFromStream(Stream stream, PostProcessSteps postProcessFlags, String formatHint)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.ImportFileFromStreamStreamString">
            <summary>Задает оболочка совместимости AssimpImporter.ImportFileFromStream(Stream stream, String formatHint)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.ImportFileString">
            <summary>Задает оболочка совместимости AssimpImporter.ImportFile(String file)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.ImportFileStringPostProcessSteps">
            <summary>Задает оболочка совместимости AssimpImporter.ImportFile(String file, PostProcessSteps postProcessFlags)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.IsDisposedGet">
            <summary>Задает оболочка совместимости AssimpImporter.get_IsDisposed()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.IsExportFormatSupportedString">
            <summary>Задает оболочка совместимости AssimpImporter.IsExportFormatSupported(String format)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.IsImportFormatSupportedString">
            <summary>Задает оболочка совместимости AssimpImporter.IsImportFormatSupported(String format)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.LogStreamsGet">
            <summary>Задает оболочка совместимости AssimpImporter.get_LogStreams()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.PrepareImport">
            <summary>Задает оболочка совместимости AssimpImporter.PrepareImport()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.PropertyConfigurationsGet">
            <summary>Задает оболочка совместимости AssimpImporter.get_PropertyConfigurations()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.ReleaseConfigs">
            <summary>Задает оболочка совместимости AssimpImporter.ReleaseConfigs()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.RemoveConfigString">
            <summary>Задает оболочка совместимости AssimpImporter.RemoveConfig(String configName)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.RemoveConfigs">
            <summary>Задает оболочка совместимости AssimpImporter.RemoveConfigs()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.RemoveIOSystem">
            <summary>Задает оболочка совместимости AssimpImporter.RemoveIOSystem()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.ScaleGet">
            <summary>Задает оболочка совместимости AssimpImporter.get_Scale()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.ScaleSetSingle">
            <summary>Задает оболочка совместимости AssimpImporter.set_Scale(Single value)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.SetConfigPropertyConfig">
            <summary>Задает оболочка совместимости AssimpImporter.SetConfig(PropertyConfig config)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.SetIOSystemIOSystem">
            <summary>Задает оболочка совместимости AssimpImporter.SetIOSystem(IOSystem ioSystem)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.TransformSceneIntPtr">
            <summary>Задает оболочка совместимости AssimpImporter.TransformScene(IntPtr scene)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.UsingCustomIOSystemGet">
            <summary>Задает оболочка совместимости AssimpImporter.get_UsingCustomIOSystem()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.ValidateAndCreateSceneIntPtr">
            <summary>Задает оболочка совместимости AssimpImporter.ValidateAndCreateScene(IntPtr ptr)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.ValidateSceneIntPtr">
            <summary>Задает оболочка совместимости AssimpImporter.ValidateScene(IntPtr ptr)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.VerboseLoggingEnabledGet">
            <summary>Задает оболочка совместимости AssimpImporter.get_VerboseLoggingEnabled()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.VerboseLoggingEnabledSetBoolean">
            <summary>Задает оболочка совместимости AssimpImporter.set_VerboseLoggingEnabled(Boolean value)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.XAxisRotationGet">
            <summary>Задает оболочка совместимости AssimpImporter.get_XAxisRotation()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.XAxisRotationSetSingle">
            <summary>Задает оболочка совместимости AssimpImporter.set_XAxisRotation(Single value)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.YAxisRotationGet">
            <summary>Задает оболочка совместимости AssimpImporter.get_YAxisRotation()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.YAxisRotationSetSingle">
            <summary>Задает оболочка совместимости AssimpImporter.set_YAxisRotation(Single value)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.ZAxisRotationGet">
            <summary>Задает оболочка совместимости AssimpImporter.get_ZAxisRotation()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AllInstances.ZAxisRotationSetSingle">
            <summary>Задает оболочка совместимости AssimpImporter.set_ZAxisRotation(Single value)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AttachLogStreamLogStream">
            <summary>Задает оболочка совместимости AssimpImporter.AttachLogStream(LogStream logstream)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.AttachLogs">
            <summary>Задает оболочка совместимости AssimpImporter.AttachLogs()</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimAssimpImporter.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimAssimpImporter.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimAssimpImporter.Bind(System.IDisposable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.BuildMatrix">
            <summary>Задает оболочка совместимости AssimpImporter.BuildMatrix()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.CleanupImport">
            <summary>Задает оболочка совместимости AssimpImporter.CleanupImport()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.Constructor">
            <summary>Задает оболочка совместимости AssimpImporter.AssimpImporter()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.ContainsConfigString">
            <summary>Задает оболочка совместимости AssimpImporter.ContainsConfig(String configName)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.ConvertFromFileToBlobStringPostProcessStepsStringPostProcessSteps">
            <summary>Задает оболочка совместимости AssimpImporter.ConvertFromFileToBlob(String inputFilename, PostProcessSteps importProcessSteps, String exportFormatId, PostProcessSteps exportProcessSteps)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.ConvertFromFileToBlobStringString">
            <summary>Задает оболочка совместимости AssimpImporter.ConvertFromFileToBlob(String inputFilename, String exportFormatId)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.ConvertFromFileToBlobStringStringPostProcessSteps">
            <summary>Задает оболочка совместимости AssimpImporter.ConvertFromFileToBlob(String inputFilename, String exportFormatId, PostProcessSteps exportProcessSteps)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.ConvertFromFileToFileStringPostProcessStepsStringStringPostProcessSteps">
            <summary>Задает оболочка совместимости AssimpImporter.ConvertFromFileToFile(String inputFilename, PostProcessSteps importProcessSteps, String outputFilename, String exportFormatId, PostProcessSteps exportProcessSteps)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.ConvertFromFileToFileStringStringString">
            <summary>Задает оболочка совместимости AssimpImporter.ConvertFromFileToFile(String inputFilename, String outputFilename, String exportFormatId)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.ConvertFromFileToFileStringStringStringPostProcessSteps">
            <summary>Задает оболочка совместимости AssimpImporter.ConvertFromFileToFile(String inputFilename, String outputFilename, String exportFormatId, PostProcessSteps exportProcessSteps)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.ConvertFromStreamToBlobStreamStringPostProcessStepsStringPostProcessSteps">
            <summary>Задает оболочка совместимости AssimpImporter.ConvertFromStreamToBlob(Stream inputStream, String importFormatHint, PostProcessSteps importProcessSteps, String exportFormatId, PostProcessSteps exportProcessSteps)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.ConvertFromStreamToBlobStreamStringString">
            <summary>Задает оболочка совместимости AssimpImporter.ConvertFromStreamToBlob(Stream inputStream, String importFormatHint, String exportFormatId)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.ConvertFromStreamToBlobStreamStringStringPostProcessSteps">
            <summary>Задает оболочка совместимости AssimpImporter.ConvertFromStreamToBlob(Stream inputStream, String importFormatHint, String exportFormatId, PostProcessSteps exportProcessSteps)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.ConvertFromStreamToFileStreamStringPostProcessStepsStringStringPostProcessSteps">
            <summary>Задает оболочка совместимости AssimpImporter.ConvertFromStreamToFile(Stream inputStream, String importFormatHint, PostProcessSteps importProcessSteps, String outputFilename, String exportFormatId, PostProcessSteps exportProcessSteps)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.ConvertFromStreamToFileStreamStringStringString">
            <summary>Задает оболочка совместимости AssimpImporter.ConvertFromStreamToFile(Stream inputStream, String importFormatHint, String outputFilename, String exportFormatId)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.ConvertFromStreamToFileStreamStringStringStringPostProcessSteps">
            <summary>Задает оболочка совместимости AssimpImporter.ConvertFromStreamToFile(Stream inputStream, String importFormatHint, String outputFilename, String exportFormatId, PostProcessSteps exportProcessSteps)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.CreateConfigs">
            <summary>Задает оболочка совместимости AssimpImporter.CreateConfigs()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.DetachLogStreamLogStream">
            <summary>Задает оболочка совместимости AssimpImporter.DetachLogStream(LogStream logStream)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.DetachLogStreams">
            <summary>Задает оболочка совместимости AssimpImporter.DetachLogStreams()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.DetatachLogs">
            <summary>Задает оболочка совместимости AssimpImporter.DetatachLogs()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.Dispose">
            <summary>Задает оболочка совместимости AssimpImporter.Dispose()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.DisposeBoolean">
            <summary>Задает оболочка совместимости AssimpImporter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.GetSupportedExportFormats">
            <summary>Задает оболочка совместимости AssimpImporter.GetSupportedExportFormats()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.GetSupportedImportFormats">
            <summary>Задает оболочка совместимости AssimpImporter.GetSupportedImportFormats()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.ImportFileFromStreamStreamPostProcessStepsString">
            <summary>Задает оболочка совместимости AssimpImporter.ImportFileFromStream(Stream stream, PostProcessSteps postProcessFlags, String formatHint)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.ImportFileFromStreamStreamString">
            <summary>Задает оболочка совместимости AssimpImporter.ImportFileFromStream(Stream stream, String formatHint)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.ImportFileString">
            <summary>Задает оболочка совместимости AssimpImporter.ImportFile(String file)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.ImportFileStringPostProcessSteps">
            <summary>Задает оболочка совместимости AssimpImporter.ImportFile(String file, PostProcessSteps postProcessFlags)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.IsDisposedGet">
            <summary>Задает оболочка совместимости AssimpImporter.get_IsDisposed()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.IsExportFormatSupportedString">
            <summary>Задает оболочка совместимости AssimpImporter.IsExportFormatSupported(String format)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.IsImportFormatSupportedString">
            <summary>Задает оболочка совместимости AssimpImporter.IsImportFormatSupported(String format)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.LogStreamsGet">
            <summary>Задает оболочка совместимости AssimpImporter.get_LogStreams()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.PrepareImport">
            <summary>Задает оболочка совместимости AssimpImporter.PrepareImport()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.PropertyConfigurationsGet">
            <summary>Задает оболочка совместимости AssimpImporter.get_PropertyConfigurations()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.ReleaseConfigs">
            <summary>Задает оболочка совместимости AssimpImporter.ReleaseConfigs()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.RemoveConfigString">
            <summary>Задает оболочка совместимости AssimpImporter.RemoveConfig(String configName)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.RemoveConfigs">
            <summary>Задает оболочка совместимости AssimpImporter.RemoveConfigs()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.RemoveIOSystem">
            <summary>Задает оболочка совместимости AssimpImporter.RemoveIOSystem()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.ScaleGet">
            <summary>Задает оболочка совместимости AssimpImporter.get_Scale()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.ScaleSetSingle">
            <summary>Задает оболочка совместимости AssimpImporter.set_Scale(Single value)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.SetConfigPropertyConfig">
            <summary>Задает оболочка совместимости AssimpImporter.SetConfig(PropertyConfig config)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.SetIOSystemIOSystem">
            <summary>Задает оболочка совместимости AssimpImporter.SetIOSystem(IOSystem ioSystem)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.StaticConstructor">
            <summary>Задает оболочка совместимости AssimpImporter.AssimpImporter()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.TransformSceneIntPtr">
            <summary>Задает оболочка совместимости AssimpImporter.TransformScene(IntPtr scene)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.UsingCustomIOSystemGet">
            <summary>Задает оболочка совместимости AssimpImporter.get_UsingCustomIOSystem()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.ValidateAndCreateSceneIntPtr">
            <summary>Задает оболочка совместимости AssimpImporter.ValidateAndCreateScene(IntPtr ptr)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.ValidateSceneIntPtr">
            <summary>Задает оболочка совместимости AssimpImporter.ValidateScene(IntPtr ptr)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.VerboseLoggingEnabledGet">
            <summary>Задает оболочка совместимости AssimpImporter.get_VerboseLoggingEnabled()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.VerboseLoggingEnabledSetBoolean">
            <summary>Задает оболочка совместимости AssimpImporter.set_VerboseLoggingEnabled(Boolean value)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.XAxisRotationGet">
            <summary>Задает оболочка совместимости AssimpImporter.get_XAxisRotation()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.XAxisRotationSetSingle">
            <summary>Задает оболочка совместимости AssimpImporter.set_XAxisRotation(Single value)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.YAxisRotationGet">
            <summary>Задает оболочка совместимости AssimpImporter.get_YAxisRotation()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.YAxisRotationSetSingle">
            <summary>Задает оболочка совместимости AssimpImporter.set_YAxisRotation(Single value)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.ZAxisRotationGet">
            <summary>Задает оболочка совместимости AssimpImporter.get_ZAxisRotation()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimAssimpImporter.ZAxisRotationSetSingle">
            <summary>Задает оболочка совместимости AssimpImporter.set_ZAxisRotation(Single value)</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimBone">
            <summary>Тип оболочки совместимости для Assimp.Bone</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimBone.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimBone.#ctor(Assimp.Bone)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimBone.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimBone.AllInstances.HasVertexWeightsGet">
            <summary>Задает оболочка совместимости Bone.get_HasVertexWeights()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimBone.AllInstances.NameGet">
            <summary>Задает оболочка совместимости Bone.get_Name()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimBone.AllInstances.OffsetMatrixGet">
            <summary>Задает оболочка совместимости Bone.get_OffsetMatrix()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimBone.AllInstances.VertexWeightCountGet">
            <summary>Задает оболочка совместимости Bone.get_VertexWeightCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimBone.AllInstances.VertexWeightsGet">
            <summary>Задает оболочка совместимости Bone.get_VertexWeights()</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimBone.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimBone.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimBone.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimBone.ConstructorAiBoneRef">
            <summary>Задает оболочка совместимости Bone.Bone(AiBone&amp; bone)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimBone.HasVertexWeightsGet">
            <summary>Задает оболочка совместимости Bone.get_HasVertexWeights()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimBone.NameGet">
            <summary>Задает оболочка совместимости Bone.get_Name()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimBone.OffsetMatrixGet">
            <summary>Задает оболочка совместимости Bone.get_OffsetMatrix()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimBone.VertexWeightCountGet">
            <summary>Задает оболочка совместимости Bone.get_VertexWeightCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimBone.VertexWeightsGet">
            <summary>Задает оболочка совместимости Bone.get_VertexWeights()</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimCamera">
            <summary>Тип оболочки совместимости для Assimp.Camera</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimCamera.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimCamera.#ctor(Assimp.Camera)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimCamera.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimCamera.AllInstances.AspectRatioGet">
            <summary>Задает оболочка совместимости Camera.get_AspectRatio()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimCamera.AllInstances.ClipPlaneFarGet">
            <summary>Задает оболочка совместимости Camera.get_ClipPlaneFar()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimCamera.AllInstances.ClipPlaneNearGet">
            <summary>Задает оболочка совместимости Camera.get_ClipPlaneNear()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimCamera.AllInstances.DirectionGet">
            <summary>Задает оболочка совместимости Camera.get_Direction()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimCamera.AllInstances.FieldOfviewGet">
            <summary>Задает оболочка совместимости Camera.get_FieldOfview()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimCamera.AllInstances.NameGet">
            <summary>Задает оболочка совместимости Camera.get_Name()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimCamera.AllInstances.PositionGet">
            <summary>Задает оболочка совместимости Camera.get_Position()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimCamera.AllInstances.UpGet">
            <summary>Задает оболочка совместимости Camera.get_Up()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimCamera.AllInstances.ViewMatrixGet">
            <summary>Задает оболочка совместимости Camera.get_ViewMatrix()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimCamera.AspectRatioGet">
            <summary>Задает оболочка совместимости Camera.get_AspectRatio()</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimCamera.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimCamera.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimCamera.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimCamera.ClipPlaneFarGet">
            <summary>Задает оболочка совместимости Camera.get_ClipPlaneFar()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimCamera.ClipPlaneNearGet">
            <summary>Задает оболочка совместимости Camera.get_ClipPlaneNear()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimCamera.ConstructorAiCameraRef">
            <summary>Задает оболочка совместимости Camera.Camera(AiCamera&amp; camera)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimCamera.DirectionGet">
            <summary>Задает оболочка совместимости Camera.get_Direction()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimCamera.FieldOfviewGet">
            <summary>Задает оболочка совместимости Camera.get_FieldOfview()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimCamera.NameGet">
            <summary>Задает оболочка совместимости Camera.get_Name()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimCamera.PositionGet">
            <summary>Задает оболочка совместимости Camera.get_Position()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimCamera.UpGet">
            <summary>Задает оболочка совместимости Camera.get_Up()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimCamera.ViewMatrixGet">
            <summary>Задает оболочка совместимости Camera.get_ViewMatrix()</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimColor3D">
            <summary>Тип оболочки совместимости для Assimp.Color3D</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimColor3D.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimColor3D.AdditionOpColor3DColor3D">
            <summary>Задает оболочка совместимости Color3D.op_Addition(Color3D a, Color3D b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimColor3D.AdditionOpColor3DSingle">
            <summary>Задает оболочка совместимости Color3D.op_Addition(Color3D color, Single value)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimColor3D.AdditionOpSingleColor3D">
            <summary>Задает оболочка совместимости Color3D.op_Addition(Single value, Color3D color)</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimColor3D.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimColor3D.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimColor3D.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimColor3D.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimColor3D.DivisionOpColor3DColor3D">
            <summary>Задает оболочка совместимости Color3D.op_Division(Color3D a, Color3D b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimColor3D.DivisionOpColor3DSingle">
            <summary>Задает оболочка совместимости Color3D.op_Division(Color3D color, Single divisor)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimColor3D.EqualityOpColor3DColor3D">
            <summary>Задает оболочка совместимости Color3D.op_Equality(Color3D a, Color3D b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimColor3D.InequalityOpColor3DColor3D">
            <summary>Задает оболочка совместимости Color3D.op_Inequality(Color3D a, Color3D b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimColor3D.MultiplyOpColor3DColor3D">
            <summary>Задает оболочка совместимости Color3D.op_Multiply(Color3D a, Color3D b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimColor3D.MultiplyOpColor3DSingle">
            <summary>Задает оболочка совместимости Color3D.op_Multiply(Color3D value, Single scale)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimColor3D.MultiplyOpSingleColor3D">
            <summary>Задает оболочка совместимости Color3D.op_Multiply(Single scale, Color3D value)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimColor3D.SubtractionOpColor3DColor3D">
            <summary>Задает оболочка совместимости Color3D.op_Subtraction(Color3D a, Color3D b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimColor3D.SubtractionOpColor3DSingle">
            <summary>Задает оболочка совместимости Color3D.op_Subtraction(Color3D color, Single value)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimColor3D.SubtractionOpSingleColor3D">
            <summary>Задает оболочка совместимости Color3D.op_Subtraction(Single value, Color3D color)</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimColor4D">
            <summary>Тип оболочки совместимости для Assimp.Color4D</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimColor4D.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimColor4D.AdditionOpColor4DColor4D">
            <summary>Задает оболочка совместимости Color4D.op_Addition(Color4D a, Color4D b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimColor4D.AdditionOpColor4DSingle">
            <summary>Задает оболочка совместимости Color4D.op_Addition(Color4D color, Single value)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimColor4D.AdditionOpSingleColor4D">
            <summary>Задает оболочка совместимости Color4D.op_Addition(Single value, Color4D color)</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimColor4D.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimColor4D.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimColor4D.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimColor4D.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimColor4D.DivisionOpColor4DColor4D">
            <summary>Задает оболочка совместимости Color4D.op_Division(Color4D a, Color4D b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimColor4D.DivisionOpColor4DSingle">
            <summary>Задает оболочка совместимости Color4D.op_Division(Color4D color, Single divisor)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimColor4D.EqualityOpColor4DColor4D">
            <summary>Задает оболочка совместимости Color4D.op_Equality(Color4D a, Color4D b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimColor4D.InequalityOpColor4DColor4D">
            <summary>Задает оболочка совместимости Color4D.op_Inequality(Color4D a, Color4D b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimColor4D.MultiplyOpColor4DColor4D">
            <summary>Задает оболочка совместимости Color4D.op_Multiply(Color4D a, Color4D b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimColor4D.MultiplyOpColor4DSingle">
            <summary>Задает оболочка совместимости Color4D.op_Multiply(Color4D value, Single scale)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimColor4D.MultiplyOpSingleColor4D">
            <summary>Задает оболочка совместимости Color4D.op_Multiply(Single scale, Color4D value)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimColor4D.SubtractionOpColor4DColor4D">
            <summary>Задает оболочка совместимости Color4D.op_Subtraction(Color4D a, Color4D b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimColor4D.SubtractionOpColor4DSingle">
            <summary>Задает оболочка совместимости Color4D.op_Subtraction(Color4D color, Single value)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimColor4D.SubtractionOpSingleColor4D">
            <summary>Задает оболочка совместимости Color4D.op_Subtraction(Single value, Color4D color)</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimCompressedTexture">
            <summary>Тип оболочки совместимости для Assimp.CompressedTexture</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimCompressedTexture.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimCompressedTexture.#ctor(Assimp.CompressedTexture)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimCompressedTexture.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimCompressedTexture.AllInstances.ByteCountGet">
            <summary>Задает оболочка совместимости CompressedTexture.get_ByteCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimCompressedTexture.AllInstances.DataGet">
            <summary>Задает оболочка совместимости CompressedTexture.get_Data()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimCompressedTexture.AllInstances.FormatHintGet">
            <summary>Задает оболочка совместимости CompressedTexture.get_FormatHint()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimCompressedTexture.AllInstances.HasDataGet">
            <summary>Задает оболочка совместимости CompressedTexture.get_HasData()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimCompressedTexture.AllInstances.IsCompressedGet">
            <summary>Задает оболочка совместимости CompressedTexture.get_IsCompressed()</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimCompressedTexture.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimCompressedTexture.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimCompressedTexture.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimCompressedTexture.ByteCountGet">
            <summary>Задает оболочка совместимости CompressedTexture.get_ByteCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimCompressedTexture.ConstructorAiTextureRef">
            <summary>Задает оболочка совместимости CompressedTexture.CompressedTexture(AiTexture&amp; texture)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimCompressedTexture.DataGet">
            <summary>Задает оболочка совместимости CompressedTexture.get_Data()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimCompressedTexture.FormatHintGet">
            <summary>Задает оболочка совместимости CompressedTexture.get_FormatHint()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimCompressedTexture.HasDataGet">
            <summary>Задает оболочка совместимости CompressedTexture.get_HasData()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimCompressedTexture.IsCompressedGet">
            <summary>Задает оболочка совместимости CompressedTexture.get_IsCompressed()</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimConsoleLogStream">
            <summary>Тип оболочки совместимости для Assimp.ConsoleLogStream</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimConsoleLogStream.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimConsoleLogStream.#ctor(Assimp.ConsoleLogStream)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimConsoleLogStream.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimConsoleLogStream.AllInstances.LogMessageStringString">
            <summary>Задает оболочка совместимости ConsoleLogStream.LogMessage(String msg, String userData)</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimConsoleLogStream.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimConsoleLogStream.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimConsoleLogStream.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimConsoleLogStream.Bind(System.IDisposable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimConsoleLogStream.Constructor">
            <summary>Задает оболочка совместимости ConsoleLogStream.ConsoleLogStream()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimConsoleLogStream.ConstructorString">
            <summary>Задает оболочка совместимости ConsoleLogStream.ConsoleLogStream(String userData)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimConsoleLogStream.LogMessageStringString">
            <summary>Задает оболочка совместимости ConsoleLogStream.LogMessage(String msg, String userData)</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimExportDataBlob">
            <summary>Тип оболочки совместимости для Assimp.ExportDataBlob</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimExportDataBlob.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimExportDataBlob.#ctor(Assimp.ExportDataBlob)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimExportDataBlob.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimExportDataBlob.AllInstances.DataGet">
            <summary>Задает оболочка совместимости ExportDataBlob.get_Data()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimExportDataBlob.AllInstances.HasDataGet">
            <summary>Задает оболочка совместимости ExportDataBlob.get_HasData()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimExportDataBlob.AllInstances.NameGet">
            <summary>Задает оболочка совместимости ExportDataBlob.get_Name()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimExportDataBlob.AllInstances.NextBlobGet">
            <summary>Задает оболочка совместимости ExportDataBlob.get_NextBlob()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimExportDataBlob.AllInstances.ToStreamStream">
            <summary>Задает оболочка совместимости ExportDataBlob.ToStream(Stream stream)</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimExportDataBlob.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimExportDataBlob.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimExportDataBlob.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimExportDataBlob.ConstructorAiExportDataBlobRef">
            <summary>Задает оболочка совместимости ExportDataBlob.ExportDataBlob(AiExportDataBlob&amp; dataBlob)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimExportDataBlob.ConstructorStringByteArray">
            <summary>Задает оболочка совместимости ExportDataBlob.ExportDataBlob(String name, Byte[] data)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimExportDataBlob.DataGet">
            <summary>Задает оболочка совместимости ExportDataBlob.get_Data()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimExportDataBlob.FromStreamStream">
            <summary>Задает оболочка совместимости ExportDataBlob.FromStream(Stream stream)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimExportDataBlob.HasDataGet">
            <summary>Задает оболочка совместимости ExportDataBlob.get_HasData()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimExportDataBlob.NameGet">
            <summary>Задает оболочка совместимости ExportDataBlob.get_Name()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimExportDataBlob.NextBlobGet">
            <summary>Задает оболочка совместимости ExportDataBlob.get_NextBlob()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimExportDataBlob.ReadBlobBinaryReader">
            <summary>Задает оболочка совместимости ExportDataBlob.ReadBlob(BinaryReader reader)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimExportDataBlob.ToStreamStream">
            <summary>Задает оболочка совместимости ExportDataBlob.ToStream(Stream stream)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimExportDataBlob.WriteBlobExportDataBlobBinaryWriter">
            <summary>Задает оболочка совместимости ExportDataBlob.WriteBlob(ExportDataBlob blob, BinaryWriter writer)</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimExportFormatDescription">
            <summary>Тип оболочки совместимости для Assimp.ExportFormatDescription</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimExportFormatDescription.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimExportFormatDescription.#ctor(Assimp.ExportFormatDescription)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimExportFormatDescription.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimExportFormatDescription.AllInstances.DescriptionGet">
            <summary>Задает оболочка совместимости ExportFormatDescription.get_Description()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimExportFormatDescription.AllInstances.FileExtensionGet">
            <summary>Задает оболочка совместимости ExportFormatDescription.get_FileExtension()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimExportFormatDescription.AllInstances.FormatIdGet">
            <summary>Задает оболочка совместимости ExportFormatDescription.get_FormatId()</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimExportFormatDescription.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimExportFormatDescription.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimExportFormatDescription.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimExportFormatDescription.ConstructorAiExportFormatDescRef">
            <summary>Задает оболочка совместимости ExportFormatDescription.ExportFormatDescription(AiExportFormatDesc&amp; formatDesc)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimExportFormatDescription.DescriptionGet">
            <summary>Задает оболочка совместимости ExportFormatDescription.get_Description()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimExportFormatDescription.FileExtensionGet">
            <summary>Задает оболочка совместимости ExportFormatDescription.get_FileExtension()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimExportFormatDescription.FormatIdGet">
            <summary>Задает оболочка совместимости ExportFormatDescription.get_FormatId()</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimFace">
            <summary>Тип оболочки совместимости для Assimp.Face</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimFace.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimFace.#ctor(Assimp.Face)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimFace.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimFace.AllInstances.IndexCountGet">
            <summary>Задает оболочка совместимости Face.get_IndexCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimFace.AllInstances.IndicesGet">
            <summary>Задает оболочка совместимости Face.get_Indices()</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimFace.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimFace.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimFace.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimFace.ConstructorAiFaceRef">
            <summary>Задает оболочка совместимости Face.Face(AiFace&amp; face)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimFace.IndexCountGet">
            <summary>Задает оболочка совместимости Face.get_IndexCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimFace.IndicesGet">
            <summary>Задает оболочка совместимости Face.get_Indices()</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimFileIOSystem">
            <summary>Тип оболочки совместимости для Assimp.FileIOSystem</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimFileIOSystem.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimFileIOSystem.#ctor(Assimp.FileIOSystem)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimFileIOSystem.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimFileIOSystem.AllInstances.FindFileStringStringOut">
            <summary>Задает оболочка совместимости FileIOSystem.FindFile(String fileName, String&amp; pathToFile)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimFileIOSystem.AllInstances.GetSearchDirectories">
            <summary>Задает оболочка совместимости FileIOSystem.GetSearchDirectories()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimFileIOSystem.AllInstances.OpenFileStringFileIOMode">
            <summary>Задает оболочка совместимости FileIOSystem.OpenFile(String pathToFile, FileIOMode fileMode)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimFileIOSystem.AllInstances.SetSearchDirectoriesStringArray">
            <summary>Задает оболочка совместимости FileIOSystem.SetSearchDirectories(String[] searchPaths)</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimFileIOSystem.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimFileIOSystem.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimFileIOSystem.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimFileIOSystem.Bind(System.IDisposable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimFileIOSystem.Constructor">
            <summary>Задает оболочка совместимости FileIOSystem.FileIOSystem()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimFileIOSystem.ConstructorStringArray">
            <summary>Задает оболочка совместимости FileIOSystem.FileIOSystem(String[] searchPaths)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimFileIOSystem.FindFileStringStringOut">
            <summary>Задает оболочка совместимости FileIOSystem.FindFile(String fileName, String&amp; pathToFile)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimFileIOSystem.GetSearchDirectories">
            <summary>Задает оболочка совместимости FileIOSystem.GetSearchDirectories()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimFileIOSystem.OpenFileStringFileIOMode">
            <summary>Задает оболочка совместимости FileIOSystem.OpenFile(String pathToFile, FileIOMode fileMode)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimFileIOSystem.SetSearchDirectoriesStringArray">
            <summary>Задает оболочка совместимости FileIOSystem.SetSearchDirectories(String[] searchPaths)</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimIOStream">
            <summary>Тип оболочки совместимости для Assimp.IOStream</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimIOStream.#ctor(Assimp.IOStream)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOStream.AiFileGet">
            <summary>Задает оболочка совместимости IOStream.get_AiFile()</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimIOStream.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOStream.AllInstances.AiFileGet">
            <summary>Задает оболочка совместимости IOStream.get_AiFile()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOStream.AllInstances.Close">
            <summary>Задает оболочка совместимости IOStream.Close()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOStream.AllInstances.Dispose">
            <summary>Задает оболочка совместимости IOStream.Dispose()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOStream.AllInstances.DisposeBoolean">
            <summary>Задает оболочка совместимости IOStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOStream.AllInstances.FileModeGet">
            <summary>Задает оболочка совместимости IOStream.get_FileMode()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOStream.AllInstances.GetByteBufferInt64Int64">
            <summary>Задает оболочка совместимости IOStream.GetByteBuffer(Int64 sizeOfElemInBytes, Int64 numElements)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOStream.AllInstances.IsDisposedGet">
            <summary>Задает оболочка совместимости IOStream.get_IsDisposed()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOStream.AllInstances.OnAiFileFlushProcIntPtr">
            <summary>Задает оболочка совместимости IOStream.OnAiFileFlushProc(IntPtr file)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOStream.AllInstances.OnAiFileReadProcIntPtrIntPtrUIntPtrUIntPtr">
            <summary>Задает оболочка совместимости IOStream.OnAiFileReadProc(IntPtr file, IntPtr dataRead, UIntPtr sizeOfElemInBytes, UIntPtr numElements)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOStream.AllInstances.OnAiFileSeekProcIntPtrUIntPtrOrigin">
            <summary>Задает оболочка совместимости IOStream.OnAiFileSeekProc(IntPtr file, UIntPtr offset, Origin seekOrigin)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOStream.AllInstances.OnAiFileSizeProcIntPtr">
            <summary>Задает оболочка совместимости IOStream.OnAiFileSizeProc(IntPtr file)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOStream.AllInstances.OnAiFileTellProcIntPtr">
            <summary>Задает оболочка совместимости IOStream.OnAiFileTellProc(IntPtr file)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOStream.AllInstances.OnAiFileWriteProcIntPtrIntPtrUIntPtrUIntPtr">
            <summary>Задает оболочка совместимости IOStream.OnAiFileWriteProc(IntPtr file, IntPtr dataToWrite, UIntPtr sizeOfElemInBytes, UIntPtr numElements)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOStream.AllInstances.PathToFileGet">
            <summary>Задает оболочка совместимости IOStream.get_PathToFile()</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimIOStream.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimIOStream.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOStream.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimIOStream.Bind(System.IDisposable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOStream.Close">
            <summary>Задает оболочка совместимости IOStream.Close()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOStream.ConstructorStringFileIOMode">
            <summary>Задает оболочка совместимости IOStream.IOStream(String pathToFile, FileIOMode fileMode)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOStream.Dispose">
            <summary>Задает оболочка совместимости IOStream.Dispose()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOStream.DisposeBoolean">
            <summary>Задает оболочка совместимости IOStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOStream.FileModeGet">
            <summary>Задает оболочка совместимости IOStream.get_FileMode()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOStream.GetByteBufferInt64Int64">
            <summary>Задает оболочка совместимости IOStream.GetByteBuffer(Int64 sizeOfElemInBytes, Int64 numElements)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOStream.IsDisposedGet">
            <summary>Задает оболочка совместимости IOStream.get_IsDisposed()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOStream.OnAiFileFlushProcIntPtr">
            <summary>Задает оболочка совместимости IOStream.OnAiFileFlushProc(IntPtr file)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOStream.OnAiFileReadProcIntPtrIntPtrUIntPtrUIntPtr">
            <summary>Задает оболочка совместимости IOStream.OnAiFileReadProc(IntPtr file, IntPtr dataRead, UIntPtr sizeOfElemInBytes, UIntPtr numElements)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOStream.OnAiFileSeekProcIntPtrUIntPtrOrigin">
            <summary>Задает оболочка совместимости IOStream.OnAiFileSeekProc(IntPtr file, UIntPtr offset, Origin seekOrigin)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOStream.OnAiFileSizeProcIntPtr">
            <summary>Задает оболочка совместимости IOStream.OnAiFileSizeProc(IntPtr file)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOStream.OnAiFileTellProcIntPtr">
            <summary>Задает оболочка совместимости IOStream.OnAiFileTellProc(IntPtr file)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOStream.OnAiFileWriteProcIntPtrIntPtrUIntPtrUIntPtr">
            <summary>Задает оболочка совместимости IOStream.OnAiFileWriteProc(IntPtr file, IntPtr dataToWrite, UIntPtr sizeOfElemInBytes, UIntPtr numElements)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOStream.PathToFileGet">
            <summary>Задает оболочка совместимости IOStream.get_PathToFile()</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimIOSystem">
            <summary>Тип оболочки совместимости для Assimp.IOSystem</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimIOSystem.#ctor(Assimp.IOSystem)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOSystem.AiFileIOGet">
            <summary>Задает оболочка совместимости IOSystem.get_AiFileIO()</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimIOSystem.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOSystem.AllInstances.AiFileIOGet">
            <summary>Задает оболочка совместимости IOSystem.get_AiFileIO()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOSystem.AllInstances.CloseAllFiles">
            <summary>Задает оболочка совместимости IOSystem.CloseAllFiles()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOSystem.AllInstances.CloseFileIOStream">
            <summary>Задает оболочка совместимости IOSystem.CloseFile(IOStream stream)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOSystem.AllInstances.ConvertFileModeString">
            <summary>Задает оболочка совместимости IOSystem.ConvertFileMode(String mode)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOSystem.AllInstances.Dispose">
            <summary>Задает оболочка совместимости IOSystem.Dispose()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOSystem.AllInstances.DisposeBoolean">
            <summary>Задает оболочка совместимости IOSystem.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOSystem.AllInstances.IsDisposedGet">
            <summary>Задает оболочка совместимости IOSystem.get_IsDisposed()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOSystem.AllInstances.OnAiFileCloseProcIntPtrIntPtr">
            <summary>Задает оболочка совместимости IOSystem.OnAiFileCloseProc(IntPtr fileIO, IntPtr file)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOSystem.AllInstances.OnAiFileOpenProcIntPtrStringString">
            <summary>Задает оболочка совместимости IOSystem.OnAiFileOpenProc(IntPtr fileIO, String pathToFile, String mode)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOSystem.AllInstances.OpenFileCountGet">
            <summary>Задает оболочка совместимости IOSystem.get_OpenFileCount()</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimIOSystem.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimIOSystem.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOSystem.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimIOSystem.Bind(System.IDisposable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOSystem.CloseAllFiles">
            <summary>Задает оболочка совместимости IOSystem.CloseAllFiles()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOSystem.CloseFileIOStream">
            <summary>Задает оболочка совместимости IOSystem.CloseFile(IOStream stream)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOSystem.Constructor">
            <summary>Задает оболочка совместимости IOSystem.IOSystem()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOSystem.ConvertFileModeString">
            <summary>Задает оболочка совместимости IOSystem.ConvertFileMode(String mode)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOSystem.Dispose">
            <summary>Задает оболочка совместимости IOSystem.Dispose()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOSystem.DisposeBoolean">
            <summary>Задает оболочка совместимости IOSystem.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOSystem.IsDisposedGet">
            <summary>Задает оболочка совместимости IOSystem.get_IsDisposed()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOSystem.OnAiFileCloseProcIntPtrIntPtr">
            <summary>Задает оболочка совместимости IOSystem.OnAiFileCloseProc(IntPtr fileIO, IntPtr file)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOSystem.OnAiFileOpenProcIntPtrStringString">
            <summary>Задает оболочка совместимости IOSystem.OnAiFileOpenProc(IntPtr fileIO, String pathToFile, String mode)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimIOSystem.OpenFileCountGet">
            <summary>Задает оболочка совместимости IOSystem.get_OpenFileCount()</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimLight">
            <summary>Тип оболочки совместимости для Assimp.Light</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimLight.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimLight.#ctor(Assimp.Light)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimLight.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLight.AllInstances.AngleInnerConeGet">
            <summary>Задает оболочка совместимости Light.get_AngleInnerCone()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLight.AllInstances.AngleOuterConeGet">
            <summary>Задает оболочка совместимости Light.get_AngleOuterCone()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLight.AllInstances.AttenuationConstantGet">
            <summary>Задает оболочка совместимости Light.get_AttenuationConstant()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLight.AllInstances.AttenuationLinearGet">
            <summary>Задает оболочка совместимости Light.get_AttenuationLinear()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLight.AllInstances.AttenuationQuadraticGet">
            <summary>Задает оболочка совместимости Light.get_AttenuationQuadratic()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLight.AllInstances.ColorAmbientGet">
            <summary>Задает оболочка совместимости Light.get_ColorAmbient()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLight.AllInstances.ColorDiffuseGet">
            <summary>Задает оболочка совместимости Light.get_ColorDiffuse()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLight.AllInstances.ColorSpecularGet">
            <summary>Задает оболочка совместимости Light.get_ColorSpecular()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLight.AllInstances.DirectionGet">
            <summary>Задает оболочка совместимости Light.get_Direction()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLight.AllInstances.LightTypeGet">
            <summary>Задает оболочка совместимости Light.get_LightType()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLight.AllInstances.NameGet">
            <summary>Задает оболочка совместимости Light.get_Name()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLight.AllInstances.PositionGet">
            <summary>Задает оболочка совместимости Light.get_Position()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLight.AngleInnerConeGet">
            <summary>Задает оболочка совместимости Light.get_AngleInnerCone()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLight.AngleOuterConeGet">
            <summary>Задает оболочка совместимости Light.get_AngleOuterCone()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLight.AttenuationConstantGet">
            <summary>Задает оболочка совместимости Light.get_AttenuationConstant()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLight.AttenuationLinearGet">
            <summary>Задает оболочка совместимости Light.get_AttenuationLinear()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLight.AttenuationQuadraticGet">
            <summary>Задает оболочка совместимости Light.get_AttenuationQuadratic()</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimLight.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimLight.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLight.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLight.ColorAmbientGet">
            <summary>Задает оболочка совместимости Light.get_ColorAmbient()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLight.ColorDiffuseGet">
            <summary>Задает оболочка совместимости Light.get_ColorDiffuse()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLight.ColorSpecularGet">
            <summary>Задает оболочка совместимости Light.get_ColorSpecular()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLight.ConstructorAiLightRef">
            <summary>Задает оболочка совместимости Light.Light(AiLight&amp; light)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLight.DirectionGet">
            <summary>Задает оболочка совместимости Light.get_Direction()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLight.LightTypeGet">
            <summary>Задает оболочка совместимости Light.get_LightType()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLight.NameGet">
            <summary>Задает оболочка совместимости Light.get_Name()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLight.PositionGet">
            <summary>Задает оболочка совместимости Light.get_Position()</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimLogStream">
            <summary>Тип оболочки совместимости для Assimp.LogStream</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimLogStream.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimLogStream.#ctor(Assimp.LogStream)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimLogStream.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLogStream.AllInstances.Attach">
            <summary>Задает оболочка совместимости LogStream.Attach()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLogStream.AllInstances.Detach">
            <summary>Задает оболочка совместимости LogStream.Detach()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLogStream.AllInstances.Dispose">
            <summary>Задает оболочка совместимости LogStream.Dispose()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLogStream.AllInstances.DisposeBoolean">
            <summary>Задает оболочка совместимости LogStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLogStream.AllInstances.InitializeLoggingCallbackString">
            <summary>Задает оболочка совместимости LogStream.Initialize(LoggingCallback callback, String userData)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLogStream.AllInstances.IsDisposedGet">
            <summary>Задает оболочка совместимости LogStream.get_IsDisposed()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLogStream.AllInstances.LogMessageStringString">
            <summary>Задает оболочка совместимости LogStream.LogMessage(String msg, String userData)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLogStream.AllInstances.OnAiLogStreamCallbackStringIntPtr">
            <summary>Задает оболочка совместимости LogStream.OnAiLogStreamCallback(String msg, IntPtr userData)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLogStream.AllInstances.OnAttach">
            <summary>Задает оболочка совместимости LogStream.OnAttach()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLogStream.AllInstances.OnDetach">
            <summary>Задает оболочка совместимости LogStream.OnDetach()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLogStream.AllInstances.UserDataGet">
            <summary>Задает оболочка совместимости LogStream.get_UserData()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLogStream.AllInstances.UserDataSetString">
            <summary>Задает оболочка совместимости LogStream.set_UserData(String value)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLogStream.Attach">
            <summary>Задает оболочка совместимости LogStream.Attach()</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimLogStream.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimLogStream.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLogStream.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimLogStream.Bind(System.IDisposable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLogStream.Constructor">
            <summary>Задает оболочка совместимости LogStream.LogStream()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLogStream.ConstructorLoggingCallback">
            <summary>Задает оболочка совместимости LogStream.LogStream(LoggingCallback callback)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLogStream.ConstructorLoggingCallbackString">
            <summary>Задает оболочка совместимости LogStream.LogStream(LoggingCallback callback, String userData)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLogStream.ConstructorString">
            <summary>Задает оболочка совместимости LogStream.LogStream(String userData)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLogStream.Detach">
            <summary>Задает оболочка совместимости LogStream.Detach()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLogStream.Dispose">
            <summary>Задает оболочка совместимости LogStream.Dispose()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLogStream.DisposeBoolean">
            <summary>Задает оболочка совместимости LogStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLogStream.InitializeLoggingCallbackString">
            <summary>Задает оболочка совместимости LogStream.Initialize(LoggingCallback callback, String userData)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLogStream.IsDisposedGet">
            <summary>Задает оболочка совместимости LogStream.get_IsDisposed()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLogStream.LogMessageStringString">
            <summary>Задает оболочка совместимости LogStream.LogMessage(String msg, String userData)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLogStream.OnAiLogStreamCallbackStringIntPtr">
            <summary>Задает оболочка совместимости LogStream.OnAiLogStreamCallback(String msg, IntPtr userData)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLogStream.OnAttach">
            <summary>Задает оболочка совместимости LogStream.OnAttach()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLogStream.OnDetach">
            <summary>Задает оболочка совместимости LogStream.OnDetach()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLogStream.UserDataGet">
            <summary>Задает оболочка совместимости LogStream.get_UserData()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimLogStream.UserDataSetString">
            <summary>Задает оболочка совместимости LogStream.set_UserData(String value)</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimMaterial">
            <summary>Тип оболочки совместимости для Assimp.Material</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimMaterial.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimMaterial.#ctor(Assimp.Material)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimMaterial.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.BlendModeGet">
            <summary>Задает оболочка совместимости Material.get_BlendMode()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.BumpScalingGet">
            <summary>Задает оболочка совместимости Material.get_BumpScaling()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.ColorAmbientGet">
            <summary>Задает оболочка совместимости Material.get_ColorAmbient()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.ColorDiffuseGet">
            <summary>Задает оболочка совместимости Material.get_ColorDiffuse()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.ColorEmissiveGet">
            <summary>Задает оболочка совместимости Material.get_ColorEmissive()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.ColorReflectiveGet">
            <summary>Задает оболочка совместимости Material.get_ColorReflective()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.ColorSpecularGet">
            <summary>Задает оболочка совместимости Material.get_ColorSpecular()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.ColorTransparentGet">
            <summary>Задает оболочка совместимости Material.get_ColorTransparent()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.GetAllProperties">
            <summary>Задает оболочка совместимости Material.GetAllProperties()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.GetAllTextures">
            <summary>Задает оболочка совместимости Material.GetAllTextures()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.GetNonTexturePropertyString">
            <summary>Задает оболочка совместимости Material.GetNonTextureProperty(String baseName)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.GetPropertyString">
            <summary>Задает оболочка совместимости Material.GetProperty(String fullyQualifiedName)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.GetPropertyStringTextureTypeInt32">
            <summary>Задает оболочка совместимости Material.GetProperty(String baseName, TextureType texType, Int32 texIndex)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.GetTextureCountTextureType">
            <summary>Задает оболочка совместимости Material.GetTextureCount(TextureType texType)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.GetTextureTextureTypeInt32">
            <summary>Задает оболочка совместимости Material.GetTexture(TextureType texType, Int32 index)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.GetTexturesTextureType">
            <summary>Задает оболочка совместимости Material.GetTextures(TextureType texType)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.HasBlendModeGet">
            <summary>Задает оболочка совместимости Material.get_HasBlendMode()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.HasBumpScalingGet">
            <summary>Задает оболочка совместимости Material.get_HasBumpScaling()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.HasColorAmbientGet">
            <summary>Задает оболочка совместимости Material.get_HasColorAmbient()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.HasColorDiffuseGet">
            <summary>Задает оболочка совместимости Material.get_HasColorDiffuse()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.HasColorEmissiveGet">
            <summary>Задает оболочка совместимости Material.get_HasColorEmissive()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.HasColorReflectiveGet">
            <summary>Задает оболочка совместимости Material.get_HasColorReflective()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.HasColorSpecularGet">
            <summary>Задает оболочка совместимости Material.get_HasColorSpecular()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.HasColorTransparentGet">
            <summary>Задает оболочка совместимости Material.get_HasColorTransparent()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.HasNameGet">
            <summary>Задает оболочка совместимости Material.get_HasName()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.HasNonTexturePropertyString">
            <summary>Задает оболочка совместимости Material.HasNonTextureProperty(String baseName)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.HasOpacityGet">
            <summary>Задает оболочка совместимости Material.get_HasOpacity()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.HasPropertyString">
            <summary>Задает оболочка совместимости Material.HasProperty(String fullyQualifiedName)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.HasPropertyStringTextureTypeInt32">
            <summary>Задает оболочка совместимости Material.HasProperty(String baseName, TextureType texType, Int32 texIndex)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.HasReflectivityGet">
            <summary>Задает оболочка совместимости Material.get_HasReflectivity()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.HasShadingModeGet">
            <summary>Задает оболочка совместимости Material.get_HasShadingMode()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.HasShininessGet">
            <summary>Задает оболочка совместимости Material.get_HasShininess()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.HasShininessStrengthGet">
            <summary>Задает оболочка совместимости Material.get_HasShininessStrength()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.HasTwoSidedGet">
            <summary>Задает оболочка совместимости Material.get_HasTwoSided()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.HasWireFrameGet">
            <summary>Задает оболочка совместимости Material.get_HasWireFrame()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.IsTwoSidedGet">
            <summary>Задает оболочка совместимости Material.get_IsTwoSided()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.IsWireFrameEnabledGet">
            <summary>Задает оболочка совместимости Material.get_IsWireFrameEnabled()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.NameGet">
            <summary>Задает оболочка совместимости Material.get_Name()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.OpacityGet">
            <summary>Задает оболочка совместимости Material.get_Opacity()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.PropertyCountGet">
            <summary>Задает оболочка совместимости Material.get_PropertyCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.ReflectivityGet">
            <summary>Задает оболочка совместимости Material.get_Reflectivity()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.ShadingModeGet">
            <summary>Задает оболочка совместимости Material.get_ShadingMode()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.ShininessGet">
            <summary>Задает оболочка совместимости Material.get_Shininess()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.AllInstances.ShininessStrengthGet">
            <summary>Задает оболочка совместимости Material.get_ShininessStrength()</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimMaterial.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimMaterial.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.BlendModeGet">
            <summary>Задает оболочка совместимости Material.get_BlendMode()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.BumpScalingGet">
            <summary>Задает оболочка совместимости Material.get_BumpScaling()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.ColorAmbientGet">
            <summary>Задает оболочка совместимости Material.get_ColorAmbient()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.ColorDiffuseGet">
            <summary>Задает оболочка совместимости Material.get_ColorDiffuse()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.ColorEmissiveGet">
            <summary>Задает оболочка совместимости Material.get_ColorEmissive()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.ColorReflectiveGet">
            <summary>Задает оболочка совместимости Material.get_ColorReflective()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.ColorSpecularGet">
            <summary>Задает оболочка совместимости Material.get_ColorSpecular()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.ColorTransparentGet">
            <summary>Задает оболочка совместимости Material.get_ColorTransparent()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.ConstructorAiMaterialRef">
            <summary>Задает оболочка совместимости Material.Material(AiMaterial&amp; material)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.CreateFullyQualifiedNameStringTextureTypeInt32">
            <summary>Задает оболочка совместимости Material.CreateFullyQualifiedName(String baseName, TextureType texType, Int32 texIndex)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.GetAllProperties">
            <summary>Задает оболочка совместимости Material.GetAllProperties()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.GetAllTextures">
            <summary>Задает оболочка совместимости Material.GetAllTextures()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.GetNonTexturePropertyString">
            <summary>Задает оболочка совместимости Material.GetNonTextureProperty(String baseName)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.GetPropertyString">
            <summary>Задает оболочка совместимости Material.GetProperty(String fullyQualifiedName)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.GetPropertyStringTextureTypeInt32">
            <summary>Задает оболочка совместимости Material.GetProperty(String baseName, TextureType texType, Int32 texIndex)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.GetTextureCountTextureType">
            <summary>Задает оболочка совместимости Material.GetTextureCount(TextureType texType)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.GetTextureTextureTypeInt32">
            <summary>Задает оболочка совместимости Material.GetTexture(TextureType texType, Int32 index)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.GetTexturesTextureType">
            <summary>Задает оболочка совместимости Material.GetTextures(TextureType texType)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.HasBlendModeGet">
            <summary>Задает оболочка совместимости Material.get_HasBlendMode()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.HasBumpScalingGet">
            <summary>Задает оболочка совместимости Material.get_HasBumpScaling()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.HasColorAmbientGet">
            <summary>Задает оболочка совместимости Material.get_HasColorAmbient()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.HasColorDiffuseGet">
            <summary>Задает оболочка совместимости Material.get_HasColorDiffuse()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.HasColorEmissiveGet">
            <summary>Задает оболочка совместимости Material.get_HasColorEmissive()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.HasColorReflectiveGet">
            <summary>Задает оболочка совместимости Material.get_HasColorReflective()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.HasColorSpecularGet">
            <summary>Задает оболочка совместимости Material.get_HasColorSpecular()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.HasColorTransparentGet">
            <summary>Задает оболочка совместимости Material.get_HasColorTransparent()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.HasNameGet">
            <summary>Задает оболочка совместимости Material.get_HasName()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.HasNonTexturePropertyString">
            <summary>Задает оболочка совместимости Material.HasNonTextureProperty(String baseName)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.HasOpacityGet">
            <summary>Задает оболочка совместимости Material.get_HasOpacity()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.HasPropertyString">
            <summary>Задает оболочка совместимости Material.HasProperty(String fullyQualifiedName)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.HasPropertyStringTextureTypeInt32">
            <summary>Задает оболочка совместимости Material.HasProperty(String baseName, TextureType texType, Int32 texIndex)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.HasReflectivityGet">
            <summary>Задает оболочка совместимости Material.get_HasReflectivity()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.HasShadingModeGet">
            <summary>Задает оболочка совместимости Material.get_HasShadingMode()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.HasShininessGet">
            <summary>Задает оболочка совместимости Material.get_HasShininess()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.HasShininessStrengthGet">
            <summary>Задает оболочка совместимости Material.get_HasShininessStrength()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.HasTwoSidedGet">
            <summary>Задает оболочка совместимости Material.get_HasTwoSided()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.HasWireFrameGet">
            <summary>Задает оболочка совместимости Material.get_HasWireFrame()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.IsTwoSidedGet">
            <summary>Задает оболочка совместимости Material.get_IsTwoSided()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.IsWireFrameEnabledGet">
            <summary>Задает оболочка совместимости Material.get_IsWireFrameEnabled()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.NameGet">
            <summary>Задает оболочка совместимости Material.get_Name()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.OpacityGet">
            <summary>Задает оболочка совместимости Material.get_Opacity()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.PropertyCountGet">
            <summary>Задает оболочка совместимости Material.get_PropertyCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.ReflectivityGet">
            <summary>Задает оболочка совместимости Material.get_Reflectivity()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.ShadingModeGet">
            <summary>Задает оболочка совместимости Material.get_ShadingMode()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.ShininessGet">
            <summary>Задает оболочка совместимости Material.get_Shininess()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterial.ShininessStrengthGet">
            <summary>Задает оболочка совместимости Material.get_ShininessStrength()</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimMaterialProperty">
            <summary>Тип оболочки совместимости для Assimp.MaterialProperty</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimMaterialProperty.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimMaterialProperty.#ctor(Assimp.MaterialProperty)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimMaterialProperty.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.AllInstances.AsBlendMode">
            <summary>Задает оболочка совместимости MaterialProperty.AsBlendMode()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.AllInstances.AsBoolean">
            <summary>Задает оболочка совместимости MaterialProperty.AsBoolean()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.AllInstances.AsColor3D">
            <summary>Задает оболочка совместимости MaterialProperty.AsColor3D()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.AllInstances.AsColor4D">
            <summary>Задает оболочка совместимости MaterialProperty.AsColor4D()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.AllInstances.AsFloat">
            <summary>Задает оболочка совместимости MaterialProperty.AsFloat()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.AllInstances.AsFloatArray">
            <summary>Задает оболочка совместимости MaterialProperty.AsFloatArray()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.AllInstances.AsInteger">
            <summary>Задает оболочка совместимости MaterialProperty.AsInteger()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.AllInstances.AsIntegerArray">
            <summary>Задает оболочка совместимости MaterialProperty.AsIntegerArray()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.AllInstances.AsShadingMode">
            <summary>Задает оболочка совместимости MaterialProperty.AsShadingMode()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.AllInstances.AsString">
            <summary>Задает оболочка совместимости MaterialProperty.AsString()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.AllInstances.ByteCountGet">
            <summary>Задает оболочка совместимости MaterialProperty.get_ByteCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.AllInstances.FullyQualifiedNameGet">
            <summary>Задает оболочка совместимости MaterialProperty.get_FullyQualifiedName()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.AllInstances.HasRawDataGet">
            <summary>Задает оболочка совместимости MaterialProperty.get_HasRawData()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.AllInstances.NameGet">
            <summary>Задает оболочка совместимости MaterialProperty.get_Name()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.AllInstances.PropertyTypeGet">
            <summary>Задает оболочка совместимости MaterialProperty.get_PropertyType()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.AllInstances.RawDataGet">
            <summary>Задает оболочка совместимости MaterialProperty.get_RawData()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.AllInstances.TextureIndexGet">
            <summary>Задает оболочка совместимости MaterialProperty.get_TextureIndex()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.AllInstances.TextureTypeGet">
            <summary>Задает оболочка совместимости MaterialProperty.get_TextureType()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.AsBlendMode">
            <summary>Задает оболочка совместимости MaterialProperty.AsBlendMode()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.AsBoolean">
            <summary>Задает оболочка совместимости MaterialProperty.AsBoolean()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.AsColor3D">
            <summary>Задает оболочка совместимости MaterialProperty.AsColor3D()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.AsColor4D">
            <summary>Задает оболочка совместимости MaterialProperty.AsColor4D()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.AsFloat">
            <summary>Задает оболочка совместимости MaterialProperty.AsFloat()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.AsFloatArray">
            <summary>Задает оболочка совместимости MaterialProperty.AsFloatArray()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.AsInteger">
            <summary>Задает оболочка совместимости MaterialProperty.AsInteger()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.AsIntegerArray">
            <summary>Задает оболочка совместимости MaterialProperty.AsIntegerArray()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.AsShadingMode">
            <summary>Задает оболочка совместимости MaterialProperty.AsShadingMode()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.AsString">
            <summary>Задает оболочка совместимости MaterialProperty.AsString()</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimMaterialProperty.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimMaterialProperty.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.ByteCountGet">
            <summary>Задает оболочка совместимости MaterialProperty.get_ByteCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.ConstructorAiMaterialRefAiMaterialPropertyRef">
            <summary>Задает оболочка совместимости MaterialProperty.MaterialProperty(AiMaterial&amp; material, AiMaterialProperty&amp; property)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.FullyQualifiedNameGet">
            <summary>Задает оболочка совместимости MaterialProperty.get_FullyQualifiedName()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.HasRawDataGet">
            <summary>Задает оболочка совместимости MaterialProperty.get_HasRawData()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.NameGet">
            <summary>Задает оболочка совместимости MaterialProperty.get_Name()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.PropertyTypeGet">
            <summary>Задает оболочка совместимости MaterialProperty.get_PropertyType()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.RawDataGet">
            <summary>Задает оболочка совместимости MaterialProperty.get_RawData()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.TextureIndexGet">
            <summary>Задает оболочка совместимости MaterialProperty.get_TextureIndex()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMaterialProperty.TextureTypeGet">
            <summary>Задает оболочка совместимости MaterialProperty.get_TextureType()</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimMatrix3x3">
            <summary>Тип оболочки совместимости для Assimp.Matrix3x3</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimMatrix3x3.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimMatrix3x3.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimMatrix3x3.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimMatrix3x3.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMatrix3x3.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMatrix3x3.EqualityOpMatrix3x3Matrix3x3">
            <summary>Задает оболочка совместимости Matrix3x3.op_Equality(Matrix3x3 a, Matrix3x3 b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMatrix3x3.FromAngleAxisSingleVector3D">
            <summary>Задает оболочка совместимости Matrix3x3.FromAngleAxis(Single radians, Vector3D axis)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMatrix3x3.FromEulerAnglesXYZSingleSingleSingle">
            <summary>Задает оболочка совместимости Matrix3x3.FromEulerAnglesXYZ(Single x, Single y, Single z)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMatrix3x3.FromEulerAnglesXYZVector3D">
            <summary>Задает оболочка совместимости Matrix3x3.FromEulerAnglesXYZ(Vector3D angles)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMatrix3x3.FromRotationXSingle">
            <summary>Задает оболочка совместимости Matrix3x3.FromRotationX(Single radians)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMatrix3x3.FromRotationYSingle">
            <summary>Задает оболочка совместимости Matrix3x3.FromRotationY(Single radians)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMatrix3x3.FromRotationZSingle">
            <summary>Задает оболочка совместимости Matrix3x3.FromRotationZ(Single radians)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMatrix3x3.FromScalingVector3D">
            <summary>Задает оболочка совместимости Matrix3x3.FromScaling(Vector3D scaling)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMatrix3x3.FromToMatrixVector3DVector3D">
            <summary>Задает оболочка совместимости Matrix3x3.FromToMatrix(Vector3D from, Vector3D to)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMatrix3x3.IdentityGet">
            <summary>Задает оболочка совместимости Matrix3x3.get_Identity()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMatrix3x3.ImplicitOpMatrix4x4Matrix3x3">
            <summary>Задает оболочка совместимости Matrix3x3.op_Implicit(Matrix4x4 mat)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMatrix3x3.InequalityOpMatrix3x3Matrix3x3">
            <summary>Задает оболочка совместимости Matrix3x3.op_Inequality(Matrix3x3 a, Matrix3x3 b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMatrix3x3.MultiplyOpMatrix3x3Matrix3x3">
            <summary>Задает оболочка совместимости Matrix3x3.op_Multiply(Matrix3x3 a, Matrix3x3 b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMatrix3x3.StaticConstructor">
            <summary>Задает оболочка совместимости Matrix3x3.Matrix3x3()</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimMatrix4x4">
            <summary>Тип оболочки совместимости для Assimp.Matrix4x4</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimMatrix4x4.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimMatrix4x4.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimMatrix4x4.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimMatrix4x4.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMatrix4x4.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMatrix4x4.EqualityOpMatrix4x4Matrix4x4">
            <summary>Задает оболочка совместимости Matrix4x4.op_Equality(Matrix4x4 a, Matrix4x4 b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMatrix4x4.FromAngleAxisSingleVector3D">
            <summary>Задает оболочка совместимости Matrix4x4.FromAngleAxis(Single radians, Vector3D axis)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMatrix4x4.FromEulerAnglesXYZSingleSingleSingle">
            <summary>Задает оболочка совместимости Matrix4x4.FromEulerAnglesXYZ(Single x, Single y, Single z)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMatrix4x4.FromEulerAnglesXYZVector3D">
            <summary>Задает оболочка совместимости Matrix4x4.FromEulerAnglesXYZ(Vector3D angles)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMatrix4x4.FromRotationXSingle">
            <summary>Задает оболочка совместимости Matrix4x4.FromRotationX(Single radians)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMatrix4x4.FromRotationYSingle">
            <summary>Задает оболочка совместимости Matrix4x4.FromRotationY(Single radians)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMatrix4x4.FromRotationZSingle">
            <summary>Задает оболочка совместимости Matrix4x4.FromRotationZ(Single radians)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMatrix4x4.FromScalingVector3D">
            <summary>Задает оболочка совместимости Matrix4x4.FromScaling(Vector3D scaling)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMatrix4x4.FromToMatrixVector3DVector3D">
            <summary>Задает оболочка совместимости Matrix4x4.FromToMatrix(Vector3D from, Vector3D to)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMatrix4x4.FromTranslationVector3D">
            <summary>Задает оболочка совместимости Matrix4x4.FromTranslation(Vector3D translation)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMatrix4x4.IdentityGet">
            <summary>Задает оболочка совместимости Matrix4x4.get_Identity()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMatrix4x4.ImplicitOpMatrix3x3Matrix4x4">
            <summary>Задает оболочка совместимости Matrix4x4.op_Implicit(Matrix3x3 mat)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMatrix4x4.InequalityOpMatrix4x4Matrix4x4">
            <summary>Задает оболочка совместимости Matrix4x4.op_Inequality(Matrix4x4 a, Matrix4x4 b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMatrix4x4.MultiplyOpMatrix4x4Matrix4x4">
            <summary>Задает оболочка совместимости Matrix4x4.op_Multiply(Matrix4x4 a, Matrix4x4 b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMatrix4x4.StaticConstructor">
            <summary>Задает оболочка совместимости Matrix4x4.Matrix4x4()</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimMemoryHelper">
            <summary>Тип оболочки совместимости для Assimp.MemoryHelper</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimMemoryHelper.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMemoryHelper.AddIntPtrIntPtrInt32">
            <summary>Задает оболочка совместимости MemoryHelper.AddIntPtr(IntPtr ptr, Int32 offset)</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimMemoryHelper.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimMemoryHelper.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMemoryHelper.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMemoryHelper.ReadStreamFullyStreamInt32">
            <summary>Задает оболочка совместимости MemoryHelper.ReadStreamFully(Stream stream, Int32 initialLength)</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimMesh">
            <summary>Тип оболочки совместимости для Assimp.Mesh</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimMesh.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimMesh.#ctor(Assimp.Mesh)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimMesh.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.AllInstances.BiTangentsGet">
            <summary>Задает оболочка совместимости Mesh.get_BiTangents()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.AllInstances.BoneCountGet">
            <summary>Задает оболочка совместимости Mesh.get_BoneCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.AllInstances.BonesGet">
            <summary>Задает оболочка совместимости Mesh.get_Bones()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.AllInstances.FaceCountGet">
            <summary>Задает оболочка совместимости Mesh.get_FaceCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.AllInstances.FacesGet">
            <summary>Задает оболочка совместимости Mesh.get_Faces()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.AllInstances.GetIndices">
            <summary>Задает оболочка совместимости Mesh.GetIndices()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.AllInstances.GetIntIndices">
            <summary>Задает оболочка совместимости Mesh.GetIntIndices()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.AllInstances.GetShortIndices">
            <summary>Задает оболочка совместимости Mesh.GetShortIndices()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.AllInstances.GetTextureCoordsInt32">
            <summary>Задает оболочка совместимости Mesh.GetTextureCoords(Int32 channelIndex)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.AllInstances.GetUVComponentCountInt32">
            <summary>Задает оболочка совместимости Mesh.GetUVComponentCount(Int32 channelIndex)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.AllInstances.GetVertexColorsInt32">
            <summary>Задает оболочка совместимости Mesh.GetVertexColors(Int32 channelIndex)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.AllInstances.HasBonesGet">
            <summary>Задает оболочка совместимости Mesh.get_HasBones()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.AllInstances.HasFacesGet">
            <summary>Задает оболочка совместимости Mesh.get_HasFaces()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.AllInstances.HasNormalsGet">
            <summary>Задает оболочка совместимости Mesh.get_HasNormals()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.AllInstances.HasTangentBasisGet">
            <summary>Задает оболочка совместимости Mesh.get_HasTangentBasis()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.AllInstances.HasTextureCoordsInt32">
            <summary>Задает оболочка совместимости Mesh.HasTextureCoords(Int32 channelIndex)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.AllInstances.HasVertexColorsInt32">
            <summary>Задает оболочка совместимости Mesh.HasVertexColors(Int32 channelIndex)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.AllInstances.HasVerticesGet">
            <summary>Задает оболочка совместимости Mesh.get_HasVertices()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.AllInstances.MaterialIndexGet">
            <summary>Задает оболочка совместимости Mesh.get_MaterialIndex()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.AllInstances.NameGet">
            <summary>Задает оболочка совместимости Mesh.get_Name()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.AllInstances.NormalsGet">
            <summary>Задает оболочка совместимости Mesh.get_Normals()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.AllInstances.PrimitiveTypeGet">
            <summary>Задает оболочка совместимости Mesh.get_PrimitiveType()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.AllInstances.TangentsGet">
            <summary>Задает оболочка совместимости Mesh.get_Tangents()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.AllInstances.TextureCoordsChannelCountGet">
            <summary>Задает оболочка совместимости Mesh.get_TextureCoordsChannelCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.AllInstances.VertexColorChannelCountGet">
            <summary>Задает оболочка совместимости Mesh.get_VertexColorChannelCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.AllInstances.VertexCountGet">
            <summary>Задает оболочка совместимости Mesh.get_VertexCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.AllInstances.VerticesGet">
            <summary>Задает оболочка совместимости Mesh.get_Vertices()</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimMesh.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimMesh.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.BiTangentsGet">
            <summary>Задает оболочка совместимости Mesh.get_BiTangents()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.BoneCountGet">
            <summary>Задает оболочка совместимости Mesh.get_BoneCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.BonesGet">
            <summary>Задает оболочка совместимости Mesh.get_Bones()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.ConstructorAiMeshRef">
            <summary>Задает оболочка совместимости Mesh.Mesh(AiMesh&amp; mesh)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.FaceCountGet">
            <summary>Задает оболочка совместимости Mesh.get_FaceCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.FacesGet">
            <summary>Задает оболочка совместимости Mesh.get_Faces()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.GetIndices">
            <summary>Задает оболочка совместимости Mesh.GetIndices()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.GetIntIndices">
            <summary>Задает оболочка совместимости Mesh.GetIntIndices()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.GetShortIndices">
            <summary>Задает оболочка совместимости Mesh.GetShortIndices()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.GetTextureCoordsInt32">
            <summary>Задает оболочка совместимости Mesh.GetTextureCoords(Int32 channelIndex)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.GetUVComponentCountInt32">
            <summary>Задает оболочка совместимости Mesh.GetUVComponentCount(Int32 channelIndex)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.GetVertexColorsInt32">
            <summary>Задает оболочка совместимости Mesh.GetVertexColors(Int32 channelIndex)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.HasBonesGet">
            <summary>Задает оболочка совместимости Mesh.get_HasBones()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.HasFacesGet">
            <summary>Задает оболочка совместимости Mesh.get_HasFaces()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.HasNormalsGet">
            <summary>Задает оболочка совместимости Mesh.get_HasNormals()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.HasTangentBasisGet">
            <summary>Задает оболочка совместимости Mesh.get_HasTangentBasis()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.HasTextureCoordsInt32">
            <summary>Задает оболочка совместимости Mesh.HasTextureCoords(Int32 channelIndex)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.HasVertexColorsInt32">
            <summary>Задает оболочка совместимости Mesh.HasVertexColors(Int32 channelIndex)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.HasVerticesGet">
            <summary>Задает оболочка совместимости Mesh.get_HasVertices()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.MaterialIndexGet">
            <summary>Задает оболочка совместимости Mesh.get_MaterialIndex()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.NameGet">
            <summary>Задает оболочка совместимости Mesh.get_Name()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.NormalsGet">
            <summary>Задает оболочка совместимости Mesh.get_Normals()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.PrimitiveTypeGet">
            <summary>Задает оболочка совместимости Mesh.get_PrimitiveType()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.TangentsGet">
            <summary>Задает оболочка совместимости Mesh.get_Tangents()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.TextureCoordsChannelCountGet">
            <summary>Задает оболочка совместимости Mesh.get_TextureCoordsChannelCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.VertexColorChannelCountGet">
            <summary>Задает оболочка совместимости Mesh.get_VertexColorChannelCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.VertexCountGet">
            <summary>Задает оболочка совместимости Mesh.get_VertexCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMesh.VerticesGet">
            <summary>Задает оболочка совместимости Mesh.get_Vertices()</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimMeshAnimationAttachment">
            <summary>Тип оболочки совместимости для Assimp.MeshAnimationAttachment</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimMeshAnimationAttachment.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimMeshAnimationAttachment.#ctor(Assimp.MeshAnimationAttachment)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimMeshAnimationAttachment.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationAttachment.AllInstances.BiTangentsGet">
            <summary>Задает оболочка совместимости MeshAnimationAttachment.get_BiTangents()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationAttachment.AllInstances.GetTextureCoordsInt32">
            <summary>Задает оболочка совместимости MeshAnimationAttachment.GetTextureCoords(Int32 channelIndex)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationAttachment.AllInstances.GetVertexColorsInt32">
            <summary>Задает оболочка совместимости MeshAnimationAttachment.GetVertexColors(Int32 channelIndex)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationAttachment.AllInstances.HasNormalsGet">
            <summary>Задает оболочка совместимости MeshAnimationAttachment.get_HasNormals()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationAttachment.AllInstances.HasTangentBasisGet">
            <summary>Задает оболочка совместимости MeshAnimationAttachment.get_HasTangentBasis()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationAttachment.AllInstances.HasTextureCoordsInt32">
            <summary>Задает оболочка совместимости MeshAnimationAttachment.HasTextureCoords(Int32 channelIndex)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationAttachment.AllInstances.HasVertexColorsInt32">
            <summary>Задает оболочка совместимости MeshAnimationAttachment.HasVertexColors(Int32 channelIndex)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationAttachment.AllInstances.HasVerticesGet">
            <summary>Задает оболочка совместимости MeshAnimationAttachment.get_HasVertices()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationAttachment.AllInstances.NormalsGet">
            <summary>Задает оболочка совместимости MeshAnimationAttachment.get_Normals()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationAttachment.AllInstances.TangentsGet">
            <summary>Задает оболочка совместимости MeshAnimationAttachment.get_Tangents()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationAttachment.AllInstances.VertexCountGet">
            <summary>Задает оболочка совместимости MeshAnimationAttachment.get_VertexCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationAttachment.AllInstances.VerticesGet">
            <summary>Задает оболочка совместимости MeshAnimationAttachment.get_Vertices()</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimMeshAnimationAttachment.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimMeshAnimationAttachment.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationAttachment.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationAttachment.BiTangentsGet">
            <summary>Задает оболочка совместимости MeshAnimationAttachment.get_BiTangents()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationAttachment.ConstructorAiAnimMeshRef">
            <summary>Задает оболочка совместимости MeshAnimationAttachment.MeshAnimationAttachment(AiAnimMesh&amp; animMesh)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationAttachment.GetTextureCoordsInt32">
            <summary>Задает оболочка совместимости MeshAnimationAttachment.GetTextureCoords(Int32 channelIndex)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationAttachment.GetVertexColorsInt32">
            <summary>Задает оболочка совместимости MeshAnimationAttachment.GetVertexColors(Int32 channelIndex)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationAttachment.HasNormalsGet">
            <summary>Задает оболочка совместимости MeshAnimationAttachment.get_HasNormals()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationAttachment.HasTangentBasisGet">
            <summary>Задает оболочка совместимости MeshAnimationAttachment.get_HasTangentBasis()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationAttachment.HasTextureCoordsInt32">
            <summary>Задает оболочка совместимости MeshAnimationAttachment.HasTextureCoords(Int32 channelIndex)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationAttachment.HasVertexColorsInt32">
            <summary>Задает оболочка совместимости MeshAnimationAttachment.HasVertexColors(Int32 channelIndex)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationAttachment.HasVerticesGet">
            <summary>Задает оболочка совместимости MeshAnimationAttachment.get_HasVertices()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationAttachment.NormalsGet">
            <summary>Задает оболочка совместимости MeshAnimationAttachment.get_Normals()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationAttachment.TangentsGet">
            <summary>Задает оболочка совместимости MeshAnimationAttachment.get_Tangents()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationAttachment.VertexCountGet">
            <summary>Задает оболочка совместимости MeshAnimationAttachment.get_VertexCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationAttachment.VerticesGet">
            <summary>Задает оболочка совместимости MeshAnimationAttachment.get_Vertices()</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimMeshAnimationChannel">
            <summary>Тип оболочки совместимости для Assimp.MeshAnimationChannel</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimMeshAnimationChannel.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimMeshAnimationChannel.#ctor(Assimp.MeshAnimationChannel)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimMeshAnimationChannel.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationChannel.AllInstances.HasMeshKeysGet">
            <summary>Задает оболочка совместимости MeshAnimationChannel.get_HasMeshKeys()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationChannel.AllInstances.MeshKeyCountGet">
            <summary>Задает оболочка совместимости MeshAnimationChannel.get_MeshKeyCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationChannel.AllInstances.MeshKeysGet">
            <summary>Задает оболочка совместимости MeshAnimationChannel.get_MeshKeys()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationChannel.AllInstances.MeshNameGet">
            <summary>Задает оболочка совместимости MeshAnimationChannel.get_MeshName()</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimMeshAnimationChannel.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimMeshAnimationChannel.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationChannel.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationChannel.ConstructorAiMeshAnimRef">
            <summary>Задает оболочка совместимости MeshAnimationChannel.MeshAnimationChannel(AiMeshAnim&amp; meshAnim)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationChannel.HasMeshKeysGet">
            <summary>Задает оболочка совместимости MeshAnimationChannel.get_HasMeshKeys()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationChannel.MeshKeyCountGet">
            <summary>Задает оболочка совместимости MeshAnimationChannel.get_MeshKeyCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationChannel.MeshKeysGet">
            <summary>Задает оболочка совместимости MeshAnimationChannel.get_MeshKeys()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshAnimationChannel.MeshNameGet">
            <summary>Задает оболочка совместимости MeshAnimationChannel.get_MeshName()</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimMeshKey">
            <summary>Тип оболочки совместимости для Assimp.MeshKey</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimMeshKey.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimMeshKey.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimMeshKey.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimMeshKey.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshKey.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshKey.EqualityOpMeshKeyMeshKey">
            <summary>Задает оболочка совместимости MeshKey.op_Equality(MeshKey a, MeshKey b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshKey.GreaterThanOpMeshKeyMeshKey">
            <summary>Задает оболочка совместимости MeshKey.op_GreaterThan(MeshKey a, MeshKey b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshKey.InequalityOpMeshKeyMeshKey">
            <summary>Задает оболочка совместимости MeshKey.op_Inequality(MeshKey a, MeshKey b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimMeshKey.LessThanOpMeshKeyMeshKey">
            <summary>Задает оболочка совместимости MeshKey.op_LessThan(MeshKey a, MeshKey b)</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimNode">
            <summary>Тип оболочки совместимости для Assimp.Node</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimNode.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimNode.#ctor(Assimp.Node)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimNode.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNode.AllInstances.ChildCountGet">
            <summary>Задает оболочка совместимости Node.get_ChildCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNode.AllInstances.ChildrenGet">
            <summary>Задает оболочка совместимости Node.get_Children()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNode.AllInstances.FindNodeString">
            <summary>Задает оболочка совместимости Node.FindNode(String name)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNode.AllInstances.HasChildrenGet">
            <summary>Задает оболочка совместимости Node.get_HasChildren()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNode.AllInstances.HasMeshesGet">
            <summary>Задает оболочка совместимости Node.get_HasMeshes()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNode.AllInstances.MeshCountGet">
            <summary>Задает оболочка совместимости Node.get_MeshCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNode.AllInstances.MeshIndicesGet">
            <summary>Задает оболочка совместимости Node.get_MeshIndices()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNode.AllInstances.NameGet">
            <summary>Задает оболочка совместимости Node.get_Name()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNode.AllInstances.ParentGet">
            <summary>Задает оболочка совместимости Node.get_Parent()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNode.AllInstances.TransformGet">
            <summary>Задает оболочка совместимости Node.get_Transform()</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimNode.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimNode.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNode.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNode.ChildCountGet">
            <summary>Задает оболочка совместимости Node.get_ChildCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNode.ChildrenGet">
            <summary>Задает оболочка совместимости Node.get_Children()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNode.ConstructorAiNodeRefNode">
            <summary>Задает оболочка совместимости Node.Node(AiNode&amp; aiNode, Node parent)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNode.FindNodeString">
            <summary>Задает оболочка совместимости Node.FindNode(String name)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNode.HasChildrenGet">
            <summary>Задает оболочка совместимости Node.get_HasChildren()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNode.HasMeshesGet">
            <summary>Задает оболочка совместимости Node.get_HasMeshes()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNode.MeshCountGet">
            <summary>Задает оболочка совместимости Node.get_MeshCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNode.MeshIndicesGet">
            <summary>Задает оболочка совместимости Node.get_MeshIndices()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNode.NameGet">
            <summary>Задает оболочка совместимости Node.get_Name()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNode.ParentGet">
            <summary>Задает оболочка совместимости Node.get_Parent()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNode.TransformGet">
            <summary>Задает оболочка совместимости Node.get_Transform()</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimNodeAnimationChannel">
            <summary>Тип оболочки совместимости для Assimp.NodeAnimationChannel</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimNodeAnimationChannel.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimNodeAnimationChannel.#ctor(Assimp.NodeAnimationChannel)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimNodeAnimationChannel.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNodeAnimationChannel.AllInstances.HasPositionKeysGet">
            <summary>Задает оболочка совместимости NodeAnimationChannel.get_HasPositionKeys()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNodeAnimationChannel.AllInstances.HasRotationKeysGet">
            <summary>Задает оболочка совместимости NodeAnimationChannel.get_HasRotationKeys()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNodeAnimationChannel.AllInstances.HasScalingKeysGet">
            <summary>Задает оболочка совместимости NodeAnimationChannel.get_HasScalingKeys()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNodeAnimationChannel.AllInstances.NodeNameGet">
            <summary>Задает оболочка совместимости NodeAnimationChannel.get_NodeName()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNodeAnimationChannel.AllInstances.PositionKeyCountGet">
            <summary>Задает оболочка совместимости NodeAnimationChannel.get_PositionKeyCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNodeAnimationChannel.AllInstances.PositionKeysGet">
            <summary>Задает оболочка совместимости NodeAnimationChannel.get_PositionKeys()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNodeAnimationChannel.AllInstances.PostStateGet">
            <summary>Задает оболочка совместимости NodeAnimationChannel.get_PostState()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNodeAnimationChannel.AllInstances.PreStateGet">
            <summary>Задает оболочка совместимости NodeAnimationChannel.get_PreState()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNodeAnimationChannel.AllInstances.RotationKeyCountGet">
            <summary>Задает оболочка совместимости NodeAnimationChannel.get_RotationKeyCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNodeAnimationChannel.AllInstances.RotationKeysGet">
            <summary>Задает оболочка совместимости NodeAnimationChannel.get_RotationKeys()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNodeAnimationChannel.AllInstances.ScalingKeyCountGet">
            <summary>Задает оболочка совместимости NodeAnimationChannel.get_ScalingKeyCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNodeAnimationChannel.AllInstances.ScalingKeysGet">
            <summary>Задает оболочка совместимости NodeAnimationChannel.get_ScalingKeys()</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimNodeAnimationChannel.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimNodeAnimationChannel.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNodeAnimationChannel.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNodeAnimationChannel.ConstructorAiNodeAnimRef">
            <summary>Задает оболочка совместимости NodeAnimationChannel.NodeAnimationChannel(AiNodeAnim&amp; nodeAnim)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNodeAnimationChannel.HasPositionKeysGet">
            <summary>Задает оболочка совместимости NodeAnimationChannel.get_HasPositionKeys()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNodeAnimationChannel.HasRotationKeysGet">
            <summary>Задает оболочка совместимости NodeAnimationChannel.get_HasRotationKeys()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNodeAnimationChannel.HasScalingKeysGet">
            <summary>Задает оболочка совместимости NodeAnimationChannel.get_HasScalingKeys()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNodeAnimationChannel.NodeNameGet">
            <summary>Задает оболочка совместимости NodeAnimationChannel.get_NodeName()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNodeAnimationChannel.PositionKeyCountGet">
            <summary>Задает оболочка совместимости NodeAnimationChannel.get_PositionKeyCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNodeAnimationChannel.PositionKeysGet">
            <summary>Задает оболочка совместимости NodeAnimationChannel.get_PositionKeys()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNodeAnimationChannel.PostStateGet">
            <summary>Задает оболочка совместимости NodeAnimationChannel.get_PostState()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNodeAnimationChannel.PreStateGet">
            <summary>Задает оболочка совместимости NodeAnimationChannel.get_PreState()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNodeAnimationChannel.RotationKeyCountGet">
            <summary>Задает оболочка совместимости NodeAnimationChannel.get_RotationKeyCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNodeAnimationChannel.RotationKeysGet">
            <summary>Задает оболочка совместимости NodeAnimationChannel.get_RotationKeys()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNodeAnimationChannel.ScalingKeyCountGet">
            <summary>Задает оболочка совместимости NodeAnimationChannel.get_ScalingKeyCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimNodeAnimationChannel.ScalingKeysGet">
            <summary>Задает оболочка совместимости NodeAnimationChannel.get_ScalingKeys()</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimPlane">
            <summary>Тип оболочки совместимости для Assimp.Plane</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimPlane.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimPlane.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimPlane.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimPlane.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimPlane.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimPostProcessPreset">
            <summary>Тип оболочки совместимости для Assimp.PostProcessPreset</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimPostProcessPreset.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimPostProcessPreset.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimPostProcessPreset.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimPostProcessPreset.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimPostProcessPreset.ConvertToLeftHandedGet">
            <summary>Задает оболочка совместимости PostProcessPreset.get_ConvertToLeftHanded()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimPostProcessPreset.TargetRealTimeFastGet">
            <summary>Задает оболочка совместимости PostProcessPreset.get_TargetRealTimeFast()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimPostProcessPreset.TargetRealTimeMaximumQualityGet">
            <summary>Задает оболочка совместимости PostProcessPreset.get_TargetRealTimeMaximumQuality()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimPostProcessPreset.TargetRealTimeQualityGet">
            <summary>Задает оболочка совместимости PostProcessPreset.get_TargetRealTimeQuality()</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimQuaternion">
            <summary>Тип оболочки совместимости для Assimp.Quaternion</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimQuaternion.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimQuaternion.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimQuaternion.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimQuaternion.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimQuaternion.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimQuaternion.EqualityOpQuaternionQuaternion">
            <summary>Задает оболочка совместимости Quaternion.op_Equality(Quaternion a, Quaternion b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimQuaternion.InequalityOpQuaternionQuaternion">
            <summary>Задает оболочка совместимости Quaternion.op_Inequality(Quaternion a, Quaternion b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimQuaternion.MultiplyOpQuaternionQuaternion">
            <summary>Задает оболочка совместимости Quaternion.op_Multiply(Quaternion a, Quaternion b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimQuaternion.RotateVector3DQuaternion">
            <summary>Задает оболочка совместимости Quaternion.Rotate(Vector3D vec, Quaternion quat)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimQuaternion.SlerpQuaternionQuaternionSingle">
            <summary>Задает оболочка совместимости Quaternion.Slerp(Quaternion start, Quaternion end, Single factor)</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimQuaternionKey">
            <summary>Тип оболочки совместимости для Assimp.QuaternionKey</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimQuaternionKey.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimQuaternionKey.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimQuaternionKey.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimQuaternionKey.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimQuaternionKey.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimQuaternionKey.EqualityOpQuaternionKeyQuaternionKey">
            <summary>Задает оболочка совместимости QuaternionKey.op_Equality(QuaternionKey a, QuaternionKey b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimQuaternionKey.GreaterThanOpQuaternionKeyQuaternionKey">
            <summary>Задает оболочка совместимости QuaternionKey.op_GreaterThan(QuaternionKey a, QuaternionKey b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimQuaternionKey.InequalityOpQuaternionKeyQuaternionKey">
            <summary>Задает оболочка совместимости QuaternionKey.op_Inequality(QuaternionKey a, QuaternionKey b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimQuaternionKey.LessThanOpQuaternionKeyQuaternionKey">
            <summary>Задает оболочка совместимости QuaternionKey.op_LessThan(QuaternionKey a, QuaternionKey b)</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimRay">
            <summary>Тип оболочки совместимости для Assimp.Ray</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimRay.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimRay.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimRay.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimRay.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimRay.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimScene">
            <summary>Тип оболочки совместимости для Assimp.Scene</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimScene.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimScene.#ctor(Assimp.Scene)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimScene.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.AllInstances.AnimationCountGet">
            <summary>Задает оболочка совместимости Scene.get_AnimationCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.AllInstances.AnimationsGet">
            <summary>Задает оболочка совместимости Scene.get_Animations()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.AllInstances.CameraCountGet">
            <summary>Задает оболочка совместимости Scene.get_CameraCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.AllInstances.CamerasGet">
            <summary>Задает оболочка совместимости Scene.get_Cameras()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.AllInstances.HasAnimationsGet">
            <summary>Задает оболочка совместимости Scene.get_HasAnimations()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.AllInstances.HasCamerasGet">
            <summary>Задает оболочка совместимости Scene.get_HasCameras()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.AllInstances.HasLightsGet">
            <summary>Задает оболочка совместимости Scene.get_HasLights()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.AllInstances.HasMaterialsGet">
            <summary>Задает оболочка совместимости Scene.get_HasMaterials()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.AllInstances.HasMeshesGet">
            <summary>Задает оболочка совместимости Scene.get_HasMeshes()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.AllInstances.HasTexturesGet">
            <summary>Задает оболочка совместимости Scene.get_HasTextures()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.AllInstances.LightCountGet">
            <summary>Задает оболочка совместимости Scene.get_LightCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.AllInstances.LightsGet">
            <summary>Задает оболочка совместимости Scene.get_Lights()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.AllInstances.MaterialCountGet">
            <summary>Задает оболочка совместимости Scene.get_MaterialCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.AllInstances.MaterialsGet">
            <summary>Задает оболочка совместимости Scene.get_Materials()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.AllInstances.MeshCountGet">
            <summary>Задает оболочка совместимости Scene.get_MeshCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.AllInstances.MeshesGet">
            <summary>Задает оболочка совместимости Scene.get_Meshes()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.AllInstances.RootNodeGet">
            <summary>Задает оболочка совместимости Scene.get_RootNode()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.AllInstances.SceneFlagsGet">
            <summary>Задает оболочка совместимости Scene.get_SceneFlags()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.AllInstances.TextureCountGet">
            <summary>Задает оболочка совместимости Scene.get_TextureCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.AllInstances.TexturesGet">
            <summary>Задает оболочка совместимости Scene.get_Textures()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.AnimationCountGet">
            <summary>Задает оболочка совместимости Scene.get_AnimationCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.AnimationsGet">
            <summary>Задает оболочка совместимости Scene.get_Animations()</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimScene.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimScene.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.CameraCountGet">
            <summary>Задает оболочка совместимости Scene.get_CameraCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.CamerasGet">
            <summary>Задает оболочка совместимости Scene.get_Cameras()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.ConstructorAiScene">
            <summary>Задает оболочка совместимости Scene.Scene(AiScene scene)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.HasAnimationsGet">
            <summary>Задает оболочка совместимости Scene.get_HasAnimations()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.HasCamerasGet">
            <summary>Задает оболочка совместимости Scene.get_HasCameras()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.HasLightsGet">
            <summary>Задает оболочка совместимости Scene.get_HasLights()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.HasMaterialsGet">
            <summary>Задает оболочка совместимости Scene.get_HasMaterials()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.HasMeshesGet">
            <summary>Задает оболочка совместимости Scene.get_HasMeshes()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.HasTexturesGet">
            <summary>Задает оболочка совместимости Scene.get_HasTextures()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.LightCountGet">
            <summary>Задает оболочка совместимости Scene.get_LightCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.LightsGet">
            <summary>Задает оболочка совместимости Scene.get_Lights()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.MaterialCountGet">
            <summary>Задает оболочка совместимости Scene.get_MaterialCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.MaterialsGet">
            <summary>Задает оболочка совместимости Scene.get_Materials()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.MeshCountGet">
            <summary>Задает оболочка совместимости Scene.get_MeshCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.MeshesGet">
            <summary>Задает оболочка совместимости Scene.get_Meshes()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.RootNodeGet">
            <summary>Задает оболочка совместимости Scene.get_RootNode()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.SceneFlagsGet">
            <summary>Задает оболочка совместимости Scene.get_SceneFlags()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.TextureCountGet">
            <summary>Задает оболочка совместимости Scene.get_TextureCount()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimScene.TexturesGet">
            <summary>Задает оболочка совместимости Scene.get_Textures()</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimTexel">
            <summary>Тип оболочки совместимости для Assimp.Texel</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimTexel.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimTexel.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimTexel.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimTexel.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimTexel.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimTexel.EqualityOpTexelTexel">
            <summary>Задает оболочка совместимости Texel.op_Equality(Texel a, Texel b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimTexel.ImplicitOpTexelColor4D">
            <summary>Задает оболочка совместимости Texel.op_Implicit(Texel texel)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimTexel.InequalityOpTexelTexel">
            <summary>Задает оболочка совместимости Texel.op_Inequality(Texel a, Texel b)</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimTexture">
            <summary>Тип оболочки совместимости для Assimp.Texture</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimTexture.#ctor(Assimp.Texture)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimTexture.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimTexture.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimTexture.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimTexture.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimTexture.Constructor">
            <summary>Задает оболочка совместимости Texture.Texture()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimTexture.CreateTextureAiTextureRef">
            <summary>Задает оболочка совместимости Texture.CreateTexture(AiTexture&amp; texture)</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimTextureSlot">
            <summary>Тип оболочки совместимости для Assimp.TextureSlot</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimTextureSlot.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimTextureSlot.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimTextureSlot.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimTextureSlot.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimTextureSlot.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimUVTransform">
            <summary>Тип оболочки совместимости для Assimp.UVTransform</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimUVTransform.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimUVTransform.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimUVTransform.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimUVTransform.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimUVTransform.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimUncompressedTexture">
            <summary>Тип оболочки совместимости для Assimp.UncompressedTexture</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimUncompressedTexture.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimUncompressedTexture.#ctor(Assimp.UncompressedTexture)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimUncompressedTexture.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimUncompressedTexture.AllInstances.DataGet">
            <summary>Задает оболочка совместимости UncompressedTexture.get_Data()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimUncompressedTexture.AllInstances.HasDataGet">
            <summary>Задает оболочка совместимости UncompressedTexture.get_HasData()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimUncompressedTexture.AllInstances.HeightGet">
            <summary>Задает оболочка совместимости UncompressedTexture.get_Height()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimUncompressedTexture.AllInstances.IsCompressedGet">
            <summary>Задает оболочка совместимости UncompressedTexture.get_IsCompressed()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimUncompressedTexture.AllInstances.WidthGet">
            <summary>Задает оболочка совместимости UncompressedTexture.get_Width()</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimUncompressedTexture.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimUncompressedTexture.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimUncompressedTexture.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimUncompressedTexture.ConstructorAiTextureRef">
            <summary>Задает оболочка совместимости UncompressedTexture.UncompressedTexture(AiTexture&amp; texture)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimUncompressedTexture.DataGet">
            <summary>Задает оболочка совместимости UncompressedTexture.get_Data()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimUncompressedTexture.HasDataGet">
            <summary>Задает оболочка совместимости UncompressedTexture.get_HasData()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimUncompressedTexture.HeightGet">
            <summary>Задает оболочка совместимости UncompressedTexture.get_Height()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimUncompressedTexture.IsCompressedGet">
            <summary>Задает оболочка совместимости UncompressedTexture.get_IsCompressed()</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimUncompressedTexture.WidthGet">
            <summary>Задает оболочка совместимости UncompressedTexture.get_Width()</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimVector2D">
            <summary>Тип оболочки совместимости для Assimp.Vector2D</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimVector2D.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimVector2D.AdditionOpVector2DVector2D">
            <summary>Задает оболочка совместимости Vector2D.op_Addition(Vector2D a, Vector2D b)</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimVector2D.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimVector2D.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimVector2D.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimVector2D.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimVector2D.DivisionOpVector2DSingle">
            <summary>Задает оболочка совместимости Vector2D.op_Division(Vector2D value, Single divisor)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimVector2D.DivisionOpVector2DVector2D">
            <summary>Задает оболочка совместимости Vector2D.op_Division(Vector2D a, Vector2D b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimVector2D.EqualityOpVector2DVector2D">
            <summary>Задает оболочка совместимости Vector2D.op_Equality(Vector2D a, Vector2D b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimVector2D.InequalityOpVector2DVector2D">
            <summary>Задает оболочка совместимости Vector2D.op_Inequality(Vector2D a, Vector2D b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimVector2D.MultiplyOpSingleVector2D">
            <summary>Задает оболочка совместимости Vector2D.op_Multiply(Single scale, Vector2D value)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimVector2D.MultiplyOpVector2DSingle">
            <summary>Задает оболочка совместимости Vector2D.op_Multiply(Vector2D value, Single scale)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimVector2D.MultiplyOpVector2DVector2D">
            <summary>Задает оболочка совместимости Vector2D.op_Multiply(Vector2D a, Vector2D b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimVector2D.SubtractionOpVector2DVector2D">
            <summary>Задает оболочка совместимости Vector2D.op_Subtraction(Vector2D a, Vector2D b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimVector2D.UnaryNegationOpVector2D">
            <summary>Задает оболочка совместимости Vector2D.op_UnaryNegation(Vector2D value)</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimVector3D">
            <summary>Тип оболочки совместимости для Assimp.Vector3D</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimVector3D.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimVector3D.AdditionOpVector3DVector3D">
            <summary>Задает оболочка совместимости Vector3D.op_Addition(Vector3D a, Vector3D b)</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimVector3D.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimVector3D.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimVector3D.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimVector3D.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimVector3D.CrossVector3DVector3D">
            <summary>Задает оболочка совместимости Vector3D.Cross(Vector3D a, Vector3D b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimVector3D.DivisionOpVector3DSingle">
            <summary>Задает оболочка совместимости Vector3D.op_Division(Vector3D value, Single divisor)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimVector3D.DivisionOpVector3DVector3D">
            <summary>Задает оболочка совместимости Vector3D.op_Division(Vector3D a, Vector3D b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimVector3D.DotVector3DVector3D">
            <summary>Задает оболочка совместимости Vector3D.Dot(Vector3D a, Vector3D b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimVector3D.EqualityOpVector3DVector3D">
            <summary>Задает оболочка совместимости Vector3D.op_Equality(Vector3D a, Vector3D b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimVector3D.InequalityOpVector3DVector3D">
            <summary>Задает оболочка совместимости Vector3D.op_Inequality(Vector3D a, Vector3D b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimVector3D.MultiplyOpMatrix3x3Vector3D">
            <summary>Задает оболочка совместимости Vector3D.op_Multiply(Matrix3x3 matrix, Vector3D vector)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimVector3D.MultiplyOpMatrix4x4Vector3D">
            <summary>Задает оболочка совместимости Vector3D.op_Multiply(Matrix4x4 matrix, Vector3D vector)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimVector3D.MultiplyOpSingleVector3D">
            <summary>Задает оболочка совместимости Vector3D.op_Multiply(Single scale, Vector3D value)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimVector3D.MultiplyOpVector3DSingle">
            <summary>Задает оболочка совместимости Vector3D.op_Multiply(Vector3D value, Single scale)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimVector3D.MultiplyOpVector3DVector3D">
            <summary>Задает оболочка совместимости Vector3D.op_Multiply(Vector3D a, Vector3D b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimVector3D.SubtractionOpVector3DVector3D">
            <summary>Задает оболочка совместимости Vector3D.op_Subtraction(Vector3D a, Vector3D b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimVector3D.UnaryNegationOpVector3D">
            <summary>Задает оболочка совместимости Vector3D.op_UnaryNegation(Vector3D value)</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimVectorKey">
            <summary>Тип оболочки совместимости для Assimp.VectorKey</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimVectorKey.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimVectorKey.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimVectorKey.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimVectorKey.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimVectorKey.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimVectorKey.EqualityOpVectorKeyVectorKey">
            <summary>Задает оболочка совместимости VectorKey.op_Equality(VectorKey a, VectorKey b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimVectorKey.GreaterThanOpVectorKeyVectorKey">
            <summary>Задает оболочка совместимости VectorKey.op_GreaterThan(VectorKey a, VectorKey b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimVectorKey.InequalityOpVectorKeyVectorKey">
            <summary>Задает оболочка совместимости VectorKey.op_Inequality(VectorKey a, VectorKey b)</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimVectorKey.LessThanOpVectorKeyVectorKey">
            <summary>Задает оболочка совместимости VectorKey.op_LessThan(VectorKey a, VectorKey b)</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimVertexWeight">
            <summary>Тип оболочки совместимости для Assimp.VertexWeight</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimVertexWeight.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Fakes.ShimVertexWeight.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimVertexWeight.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Fakes.ShimVertexWeight.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Fakes.ShimVertexWeight.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="T:Assimp.Fakes.StubAssimpException">
            <summary>Тип заглушки Assimp.AssimpException</summary>
        </member>
        <member name="M:Assimp.Fakes.StubAssimpException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:Assimp.Fakes.StubAssimpException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:Assimp.Fakes.StubAssimpException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:Assimp.Fakes.StubAssimpException.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:Assimp.Fakes.StubAssimpException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubAssimpException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:Assimp.Fakes.StubAssimpException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubAssimpException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="P:Assimp.Fakes.StubAssimpException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:Assimp.Fakes.StubAssimpException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="F:Assimp.Fakes.StubAssimpException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:Assimp.Fakes.StubAssimpException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:Assimp.Fakes.StubAssimpException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:Assimp.Fakes.StubAssimpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Assimp.Fakes.StubAssimpException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Assimp.Fakes.StubAssimpException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Assimp.Fakes.StubAssimpException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Assimp.Fakes.StubAssimpException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Assimp.Fakes.StubAssimpException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubAssimpException</summary>
        </member>
        <member name="P:Assimp.Fakes.StubAssimpException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:Assimp.Fakes.StubAssimpException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:Assimp.Fakes.StubAssimpException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:Assimp.Fakes.StubAssimpException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:Assimp.Fakes.StubAssimpException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:Assimp.Fakes.StubAssimpException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:Assimp.Fakes.StubAssimpException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="P:Assimp.Fakes.StubAssimpException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Assimp.Fakes.StubAssimpException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Assimp.Fakes.StubAssimpException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:Assimp.Fakes.StubAssimpException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="T:Assimp.Fakes.StubAssimpImporter">
            <summary>Тип заглушки Assimp.AssimpImporter</summary>
        </member>
        <member name="M:Assimp.Fakes.StubAssimpImporter.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:Assimp.Fakes.StubAssimpImporter.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:Assimp.Fakes.StubAssimpImporter.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubAssimpImporter</summary>
        </member>
        <member name="P:Assimp.Fakes.StubAssimpImporter.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:Assimp.Fakes.StubAssimpImporter.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:Assimp.Fakes.StubFileIOSystem">
            <summary>Тип заглушки Assimp.FileIOSystem</summary>
        </member>
        <member name="M:Assimp.Fakes.StubFileIOSystem.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:Assimp.Fakes.StubFileIOSystem.#ctor(System.String[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:Assimp.Fakes.StubFileIOSystem.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:Assimp.Fakes.StubFileIOSystem.CloseAllFiles">
            <summary>Задает заглушка IOSystem.CloseAllFiles()</summary>
        </member>
        <member name="F:Assimp.Fakes.StubFileIOSystem.CloseAllFiles01">
            <summary>Задает stub IOSystem.CloseAllFiles()</summary>
        </member>
        <member name="M:Assimp.Fakes.StubFileIOSystem.CloseFile(Assimp.IOStream)">
            <summary>Задает заглушка IOSystem.CloseFile(IOStream stream)</summary>
        </member>
        <member name="F:Assimp.Fakes.StubFileIOSystem.CloseFileIOStream">
            <summary>Задает stub IOSystem.CloseFile(IOStream stream)</summary>
        </member>
        <member name="M:Assimp.Fakes.StubFileIOSystem.Dispose(System.Boolean)">
            <summary>Задает заглушка IOSystem.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Assimp.Fakes.StubFileIOSystem.DisposeBoolean">
            <summary>Задает stub IOSystem.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Assimp.Fakes.StubFileIOSystem.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubFileIOSystem</summary>
        </member>
        <member name="P:Assimp.Fakes.StubFileIOSystem.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:Assimp.Fakes.StubFileIOSystem.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:Assimp.Fakes.StubFileIOSystem.OpenFile(System.String,Assimp.FileIOMode)">
            <summary>Задает заглушка FileIOSystem.OpenFile(String pathToFile, FileIOMode fileMode)</summary>
        </member>
        <member name="F:Assimp.Fakes.StubFileIOSystem.OpenFileStringFileIOMode">
            <summary>Задает stub FileIOSystem.OpenFile(String pathToFile, FileIOMode fileMode)</summary>
        </member>
        <member name="T:Assimp.Fakes.StubIOStream">
            <summary>Тип заглушки Assimp.IOStream</summary>
        </member>
        <member name="M:Assimp.Fakes.StubIOStream.#ctor(System.String,Assimp.FileIOMode)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:Assimp.Fakes.StubIOStream.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:Assimp.Fakes.StubIOStream.Close">
            <summary>Задает заглушка IOStream.Close()</summary>
        </member>
        <member name="F:Assimp.Fakes.StubIOStream.Close01">
            <summary>Задает stub IOStream.Close()</summary>
        </member>
        <member name="M:Assimp.Fakes.StubIOStream.Dispose(System.Boolean)">
            <summary>Задает заглушка IOStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Assimp.Fakes.StubIOStream.DisposeBoolean">
            <summary>Задает stub IOStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Assimp.Fakes.StubIOStream.Flush">
            <summary>Задает заглушка IOStream.Flush()</summary>
        </member>
        <member name="F:Assimp.Fakes.StubIOStream.Flush01">
            <summary>Задает stub IOStream.Flush()</summary>
        </member>
        <member name="M:Assimp.Fakes.StubIOStream.GetFileSize">
            <summary>Задает заглушка IOStream.GetFileSize()</summary>
        </member>
        <member name="F:Assimp.Fakes.StubIOStream.GetFileSize01">
            <summary>Задает stub IOStream.GetFileSize()</summary>
        </member>
        <member name="M:Assimp.Fakes.StubIOStream.GetPosition">
            <summary>Задает заглушка IOStream.GetPosition()</summary>
        </member>
        <member name="F:Assimp.Fakes.StubIOStream.GetPosition01">
            <summary>Задает stub IOStream.GetPosition()</summary>
        </member>
        <member name="M:Assimp.Fakes.StubIOStream.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubIOStream</summary>
        </member>
        <member name="P:Assimp.Fakes.StubIOStream.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:Assimp.Fakes.StubIOStream.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:Assimp.Fakes.StubIOStream.IsValid">
            <summary>Задает stub IOStream.get_IsValid()</summary>
        </member>
        <member name="F:Assimp.Fakes.StubIOStream.IsValidGet">
            <summary>Задает stub IOStream.get_IsValid()</summary>
        </member>
        <member name="M:Assimp.Fakes.StubIOStream.Read(System.Byte[],System.Int64)">
            <summary>Задает заглушка IOStream.Read(Byte[] dataRead, Int64 count)</summary>
        </member>
        <member name="F:Assimp.Fakes.StubIOStream.ReadByteArrayInt64">
            <summary>Задает stub IOStream.Read(Byte[] dataRead, Int64 count)</summary>
        </member>
        <member name="M:Assimp.Fakes.StubIOStream.Seek(System.Int64,Assimp.Origin)">
            <summary>Задает заглушка IOStream.Seek(Int64 offset, Origin seekOrigin)</summary>
        </member>
        <member name="F:Assimp.Fakes.StubIOStream.SeekInt64Origin">
            <summary>Задает stub IOStream.Seek(Int64 offset, Origin seekOrigin)</summary>
        </member>
        <member name="M:Assimp.Fakes.StubIOStream.Write(System.Byte[],System.Int64)">
            <summary>Задает заглушка IOStream.Write(Byte[] dataToWrite, Int64 count)</summary>
        </member>
        <member name="F:Assimp.Fakes.StubIOStream.WriteByteArrayInt64">
            <summary>Задает stub IOStream.Write(Byte[] dataToWrite, Int64 count)</summary>
        </member>
        <member name="T:Assimp.Fakes.StubIOSystem">
            <summary>Тип заглушки Assimp.IOSystem</summary>
        </member>
        <member name="M:Assimp.Fakes.StubIOSystem.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:Assimp.Fakes.StubIOSystem.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:Assimp.Fakes.StubIOSystem.CloseAllFiles">
            <summary>Задает заглушка IOSystem.CloseAllFiles()</summary>
        </member>
        <member name="F:Assimp.Fakes.StubIOSystem.CloseAllFiles01">
            <summary>Задает stub IOSystem.CloseAllFiles()</summary>
        </member>
        <member name="M:Assimp.Fakes.StubIOSystem.CloseFile(Assimp.IOStream)">
            <summary>Задает заглушка IOSystem.CloseFile(IOStream stream)</summary>
        </member>
        <member name="F:Assimp.Fakes.StubIOSystem.CloseFileIOStream">
            <summary>Задает stub IOSystem.CloseFile(IOStream stream)</summary>
        </member>
        <member name="M:Assimp.Fakes.StubIOSystem.Dispose(System.Boolean)">
            <summary>Задает заглушка IOSystem.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Assimp.Fakes.StubIOSystem.DisposeBoolean">
            <summary>Задает stub IOSystem.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Assimp.Fakes.StubIOSystem.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubIOSystem</summary>
        </member>
        <member name="P:Assimp.Fakes.StubIOSystem.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:Assimp.Fakes.StubIOSystem.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:Assimp.Fakes.StubIOSystem.OpenFile(System.String,Assimp.FileIOMode)">
            <summary>Задает заглушка IOSystem.OpenFile(String pathToFile, FileIOMode fileMode)</summary>
        </member>
        <member name="F:Assimp.Fakes.StubIOSystem.OpenFileStringFileIOMode">
            <summary>Задает stub IOSystem.OpenFile(String pathToFile, FileIOMode fileMode)</summary>
        </member>
        <member name="T:Assimp.Fakes.StubLogStream">
            <summary>Тип заглушки Assimp.LogStream</summary>
        </member>
        <member name="M:Assimp.Fakes.StubLogStream.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:Assimp.Fakes.StubLogStream.#ctor(Assimp.LoggingCallback)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:Assimp.Fakes.StubLogStream.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:Assimp.Fakes.StubLogStream.#ctor(Assimp.LoggingCallback,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:Assimp.Fakes.StubLogStream.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:Assimp.Fakes.StubLogStream.Dispose(System.Boolean)">
            <summary>Задает заглушка LogStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Assimp.Fakes.StubLogStream.DisposeBoolean">
            <summary>Задает stub LogStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Assimp.Fakes.StubLogStream.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubLogStream</summary>
        </member>
        <member name="P:Assimp.Fakes.StubLogStream.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:Assimp.Fakes.StubLogStream.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:Assimp.Fakes.StubLogStream.LogMessage(System.String,System.String)">
            <summary>Задает заглушка LogStream.LogMessage(String msg, String userData)</summary>
        </member>
        <member name="F:Assimp.Fakes.StubLogStream.LogMessageStringString">
            <summary>Задает stub LogStream.LogMessage(String msg, String userData)</summary>
        </member>
        <member name="M:Assimp.Fakes.StubLogStream.OnAttach">
            <summary>Задает заглушка LogStream.OnAttach()</summary>
        </member>
        <member name="F:Assimp.Fakes.StubLogStream.OnAttach01">
            <summary>Задает stub LogStream.OnAttach()</summary>
        </member>
        <member name="M:Assimp.Fakes.StubLogStream.OnDetach">
            <summary>Задает заглушка LogStream.OnDetach()</summary>
        </member>
        <member name="F:Assimp.Fakes.StubLogStream.OnDetach01">
            <summary>Задает stub LogStream.OnDetach()</summary>
        </member>
        <member name="T:Assimp.Fakes.StubTexture">
            <summary>Тип заглушки Assimp.Texture</summary>
        </member>
        <member name="M:Assimp.Fakes.StubTexture.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:Assimp.Fakes.StubTexture.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:Assimp.Fakes.StubTexture.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTexture</summary>
        </member>
        <member name="P:Assimp.Fakes.StubTexture.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:Assimp.Fakes.StubTexture.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:Assimp.Fakes.StubTexture.IsCompressed">
            <summary>Задает stub Texture.get_IsCompressed()</summary>
        </member>
        <member name="F:Assimp.Fakes.StubTexture.IsCompressedGet">
            <summary>Задает stub Texture.get_IsCompressed()</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiAnimMesh">
            <summary>Тип оболочки совместимости для Assimp.Unmanaged.AiAnimMesh</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiAnimMesh.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiAnimMesh.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiAnimMesh.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiAnimMesh.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAiAnimMesh.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiAnimation">
            <summary>Тип оболочки совместимости для Assimp.Unmanaged.AiAnimation</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiAnimation.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiAnimation.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiAnimation.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiAnimation.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAiAnimation.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiBone">
            <summary>Тип оболочки совместимости для Assimp.Unmanaged.AiBone</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiBone.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiBone.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiBone.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiBone.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAiBone.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiCamera">
            <summary>Тип оболочки совместимости для Assimp.Unmanaged.AiCamera</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiCamera.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiCamera.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiCamera.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiCamera.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAiCamera.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiConfigs">
            <summary>Тип оболочки совместимости для Assimp.Unmanaged.AiConfigs</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiConfigs.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiConfigs.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiConfigs.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAiConfigs.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiDefines">
            <summary>Тип оболочки совместимости для Assimp.Unmanaged.AiDefines</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiDefines.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiDefines.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiDefines.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAiDefines.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiExportDataBlob">
            <summary>Тип оболочки совместимости для Assimp.Unmanaged.AiExportDataBlob</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiExportDataBlob.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiExportDataBlob.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiExportDataBlob.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiExportDataBlob.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAiExportDataBlob.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiExportFormatDesc">
            <summary>Тип оболочки совместимости для Assimp.Unmanaged.AiExportFormatDesc</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiExportFormatDesc.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiExportFormatDesc.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiExportFormatDesc.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiExportFormatDesc.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAiExportFormatDesc.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiFace">
            <summary>Тип оболочки совместимости для Assimp.Unmanaged.AiFace</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiFace.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiFace.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiFace.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiFace.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAiFace.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiFile">
            <summary>Тип оболочки совместимости для Assimp.Unmanaged.AiFile</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiFile.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiFile.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiFile.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiFile.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAiFile.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiFileIO">
            <summary>Тип оболочки совместимости для Assimp.Unmanaged.AiFileIO</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiFileIO.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiFileIO.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiFileIO.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiFileIO.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAiFileIO.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiLight">
            <summary>Тип оболочки совместимости для Assimp.Unmanaged.AiLight</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiLight.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiLight.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiLight.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiLight.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAiLight.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiLogStream">
            <summary>Тип оболочки совместимости для Assimp.Unmanaged.AiLogStream</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiLogStream.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiLogStream.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiLogStream.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiLogStream.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAiLogStream.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiMatKeys">
            <summary>Тип оболочки совместимости для Assimp.Unmanaged.AiMatKeys</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiMatKeys.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiMatKeys.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiMatKeys.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAiMatKeys.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAiMatKeys.GetFullTextureNameStringTextureTypeInt32">
            <summary>Задает оболочка совместимости AiMatKeys.GetFullTextureName(String baseName, TextureType texType, Int32 texIndex)</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiMaterial">
            <summary>Тип оболочки совместимости для Assimp.Unmanaged.AiMaterial</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiMaterial.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiMaterial.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiMaterial.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiMaterial.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAiMaterial.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiMaterialProperty">
            <summary>Тип оболочки совместимости для Assimp.Unmanaged.AiMaterialProperty</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiMaterialProperty.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiMaterialProperty.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiMaterialProperty.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiMaterialProperty.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAiMaterialProperty.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiMemoryInfo">
            <summary>Тип оболочки совместимости для Assimp.Unmanaged.AiMemoryInfo</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiMemoryInfo.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiMemoryInfo.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiMemoryInfo.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiMemoryInfo.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAiMemoryInfo.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiMesh">
            <summary>Тип оболочки совместимости для Assimp.Unmanaged.AiMesh</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiMesh.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiMesh.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiMesh.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiMesh.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAiMesh.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiMeshAnim">
            <summary>Тип оболочки совместимости для Assimp.Unmanaged.AiMeshAnim</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiMeshAnim.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiMeshAnim.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiMeshAnim.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiMeshAnim.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAiMeshAnim.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiNode">
            <summary>Тип оболочки совместимости для Assimp.Unmanaged.AiNode</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiNode.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiNode.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiNode.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiNode.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAiNode.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiNodeAnim">
            <summary>Тип оболочки совместимости для Assimp.Unmanaged.AiNodeAnim</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiNodeAnim.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiNodeAnim.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiNodeAnim.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiNodeAnim.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAiNodeAnim.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiScene">
            <summary>Тип оболочки совместимости для Assimp.Unmanaged.AiScene</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiScene.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiScene.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiScene.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiScene.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAiScene.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiString">
            <summary>Тип оболочки совместимости для Assimp.Unmanaged.AiString</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiString.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiString.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiString.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiString.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAiString.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiTexture">
            <summary>Тип оболочки совместимости для Assimp.Unmanaged.AiTexture</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiTexture.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAiTexture.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiTexture.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAiTexture.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAiTexture.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAssimpLibrary">
            <summary>Тип оболочки совместимости для Assimp.Unmanaged.AssimpLibrary</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.#ctor(Assimp.Unmanaged.AssimpLibrary)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.ApplyPostProcessingIntPtrPostProcessSteps">
            <summary>Задает оболочка совместимости AssimpLibrary.ApplyPostProcessing(IntPtr scene, PostProcessSteps flags)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.AttachLogStreamIntPtr">
            <summary>Задает оболочка совместимости AssimpLibrary.AttachLogStream(IntPtr logStreamPtr)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.CreatePropertyStore">
            <summary>Задает оболочка совместимости AssimpLibrary.CreatePropertyStore()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.CreateQuaternionFromMatrixQuaternionOutMatrix3x3Ref">
            <summary>Задает оболочка совместимости AssimpLibrary.CreateQuaternionFromMatrix(Quaternion&amp; quat, Matrix3x3&amp; mat)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.DecomposeMatrixMatrix4x4RefVector3DOutQuaternionOutVector3DOut">
            <summary>Задает оболочка совместимости AssimpLibrary.DecomposeMatrix(Matrix4x4&amp; mat, Vector3D&amp; scaling, Quaternion&amp; rotation, Vector3D&amp; position)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.DefaultLibraryPath32BitGet">
            <summary>Задает оболочка совместимости AssimpLibrary.get_DefaultLibraryPath32Bit()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.DefaultLibraryPath64BitGet">
            <summary>Задает оболочка совместимости AssimpLibrary.get_DefaultLibraryPath64Bit()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.DetachAllLogStreams">
            <summary>Задает оболочка совместимости AssimpLibrary.DetachAllLogStreams()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.DetachLogStreamIntPtr">
            <summary>Задает оболочка совместимости AssimpLibrary.DetachLogStream(IntPtr logStreamPtr)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.EnableVerboseLoggingBoolean">
            <summary>Задает оболочка совместимости AssimpLibrary.EnableVerboseLogging(Boolean enable)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.ExportSceneIntPtrStringStringIntPtrPostProcessSteps">
            <summary>Задает оболочка совместимости AssimpLibrary.ExportScene(IntPtr scene, String formatId, String fileName, IntPtr fileIO, PostProcessSteps preProcessing)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.ExportSceneIntPtrStringStringPostProcessSteps">
            <summary>Задает оболочка совместимости AssimpLibrary.ExportScene(IntPtr scene, String formatId, String fileName, PostProcessSteps preProcessing)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.ExportSceneToBlobIntPtrStringPostProcessSteps">
            <summary>Задает оболочка совместимости AssimpLibrary.ExportSceneToBlob(IntPtr scene, String formatId, PostProcessSteps preProcessing)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.FreeLibrary">
            <summary>Задает оболочка совместимости AssimpLibrary.FreeLibrary()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.GetCompileFlags">
            <summary>Задает оболочка совместимости AssimpLibrary.GetCompileFlags()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.GetErrorString">
            <summary>Задает оболочка совместимости AssimpLibrary.GetErrorString()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.GetExportFormatDescriptions">
            <summary>Задает оболочка совместимости AssimpLibrary.GetExportFormatDescriptions()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.GetExtensionList">
            <summary>Задает оболочка совместимости AssimpLibrary.GetExtensionList()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.GetLegalString">
            <summary>Задает оболочка совместимости AssimpLibrary.GetLegalString()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.GetMaterialColorAiMaterialRefStringTextureTypeUInt32">
            <summary>Задает оболочка совместимости AssimpLibrary.GetMaterialColor(AiMaterial&amp; mat, String key, TextureType texType, UInt32 texIndex)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.GetMaterialFloatArrayAiMaterialRefStringTextureTypeUInt32UInt32">
            <summary>Задает оболочка совместимости AssimpLibrary.GetMaterialFloatArray(AiMaterial&amp; mat, String key, TextureType texType, UInt32 texIndex, UInt32 floatCount)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.GetMaterialIntegerArrayAiMaterialRefStringTextureTypeUInt32UInt32">
            <summary>Задает оболочка совместимости AssimpLibrary.GetMaterialIntegerArray(AiMaterial&amp; mat, String key, TextureType texType, UInt32 texIndex, UInt32 intCount)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.GetMaterialPropertyAiMaterialRefStringTextureTypeUInt32">
            <summary>Задает оболочка совместимости AssimpLibrary.GetMaterialProperty(AiMaterial&amp; mat, String key, TextureType texType, UInt32 texIndex)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.GetMaterialStringAiMaterialRefStringTextureTypeUInt32">
            <summary>Задает оболочка совместимости AssimpLibrary.GetMaterialString(AiMaterial&amp; mat, String key, TextureType texType, UInt32 texIndex)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.GetMaterialTextureAiMaterialRefTextureTypeUInt32">
            <summary>Задает оболочка совместимости AssimpLibrary.GetMaterialTexture(AiMaterial&amp; mat, TextureType type, UInt32 index)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.GetMaterialTextureCountAiMaterialRefTextureType">
            <summary>Задает оболочка совместимости AssimpLibrary.GetMaterialTextureCount(AiMaterial&amp; mat, TextureType type)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.GetMaterialTextureFilePathAiMaterialRefTextureTypeUInt32">
            <summary>Задает оболочка совместимости AssimpLibrary.GetMaterialTextureFilePath(AiMaterial&amp; mat, TextureType type, UInt32 index)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.GetMemoryRequirementsIntPtr">
            <summary>Задает оболочка совместимости AssimpLibrary.GetMemoryRequirements(IntPtr scene)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.GetVersion">
            <summary>Задает оболочка совместимости AssimpLibrary.GetVersion()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.GetVersionMajor">
            <summary>Задает оболочка совместимости AssimpLibrary.GetVersionMajor()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.GetVersionMinor">
            <summary>Задает оболочка совместимости AssimpLibrary.GetVersionMinor()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.GetVersionRevision">
            <summary>Задает оболочка совместимости AssimpLibrary.GetVersionRevision()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.IdentityMatrix3Matrix3x3Out">
            <summary>Задает оболочка совместимости AssimpLibrary.IdentityMatrix3(Matrix3x3&amp; mat)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.IdentityMatrix4Matrix4x4Out">
            <summary>Задает оболочка совместимости AssimpLibrary.IdentityMatrix4(Matrix4x4&amp; mat)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.ImportFileFromStreamStreamPostProcessStepsStringIntPtr">
            <summary>Задает оболочка совместимости AssimpLibrary.ImportFileFromStream(Stream stream, PostProcessSteps flags, String formatHint, IntPtr propStore)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.ImportFileStringPostProcessStepsIntPtr">
            <summary>Задает оболочка совместимости AssimpLibrary.ImportFile(String file, PostProcessSteps flags, IntPtr propStore)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.ImportFileStringPostProcessStepsIntPtrIntPtr">
            <summary>Задает оболочка совместимости AssimpLibrary.ImportFile(String file, PostProcessSteps flags, IntPtr fileIO, IntPtr propStore)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.IsExtensionSupportedString">
            <summary>Задает оболочка совместимости AssimpLibrary.IsExtensionSupported(String extension)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.LibraryLoadedGet">
            <summary>Задает оболочка совместимости AssimpLibrary.get_LibraryLoaded()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.LibraryPathGet">
            <summary>Задает оболочка совместимости AssimpLibrary.get_LibraryPath()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.LoadIfNotLoaded">
            <summary>Задает оболочка совместимости AssimpLibrary.LoadIfNotLoaded()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.LoadLibrary">
            <summary>Задает оболочка совместимости AssimpLibrary.LoadLibrary()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.LoadLibraryString">
            <summary>Задает оболочка совместимости AssimpLibrary.LoadLibrary(String libPath)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.LoadLibraryStringString">
            <summary>Задает оболочка совместимости AssimpLibrary.LoadLibrary(String lib32Path, String lib64Path)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.MultiplyMatrix3Matrix3x3RefMatrix3x3Ref">
            <summary>Задает оболочка совместимости AssimpLibrary.MultiplyMatrix3(Matrix3x3&amp; dst, Matrix3x3&amp; src)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.MultiplyMatrix4Matrix4x4RefMatrix4x4Ref">
            <summary>Задает оболочка совместимости AssimpLibrary.MultiplyMatrix4(Matrix4x4&amp; dst, Matrix4x4&amp; src)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.ReleaseImportIntPtr">
            <summary>Задает оболочка совместимости AssimpLibrary.ReleaseImport(IntPtr scene)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.ReleasePropertyStoreIntPtr">
            <summary>Задает оболочка совместимости AssimpLibrary.ReleasePropertyStore(IntPtr propertyStore)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.SetImportPropertyFloatIntPtrStringSingle">
            <summary>Задает оболочка совместимости AssimpLibrary.SetImportPropertyFloat(IntPtr propertyStore, String name, Single value)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.SetImportPropertyIntegerIntPtrStringInt32">
            <summary>Задает оболочка совместимости AssimpLibrary.SetImportPropertyInteger(IntPtr propertyStore, String name, Int32 value)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.SetImportPropertyStringIntPtrStringString">
            <summary>Задает оболочка совместимости AssimpLibrary.SetImportPropertyString(IntPtr propertyStore, String name, String value)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.TransformVecByMatrix3Vector3DRefMatrix3x3Ref">
            <summary>Задает оболочка совместимости AssimpLibrary.TransformVecByMatrix3(Vector3D&amp; vec, Matrix3x3&amp; mat)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.TransformVecByMatrix4Vector3DRefMatrix4x4Ref">
            <summary>Задает оболочка совместимости AssimpLibrary.TransformVecByMatrix4(Vector3D&amp; vec, Matrix4x4&amp; mat)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.TransposeMatrix3Matrix3x3Ref">
            <summary>Задает оболочка совместимости AssimpLibrary.TransposeMatrix3(Matrix3x3&amp; mat)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AllInstances.TransposeMatrix4Matrix4x4Ref">
            <summary>Задает оболочка совместимости AssimpLibrary.TransposeMatrix4(Matrix4x4&amp; mat)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.ApplyPostProcessingIntPtrPostProcessSteps">
            <summary>Задает оболочка совместимости AssimpLibrary.ApplyPostProcessing(IntPtr scene, PostProcessSteps flags)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.AttachLogStreamIntPtr">
            <summary>Задает оболочка совместимости AssimpLibrary.AttachLogStream(IntPtr logStreamPtr)</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.Constructor">
            <summary>Задает оболочка совместимости AssimpLibrary.AssimpLibrary()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.CreatePropertyStore">
            <summary>Задает оболочка совместимости AssimpLibrary.CreatePropertyStore()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.DefaultLibraryPath32BitGet">
            <summary>Задает оболочка совместимости AssimpLibrary.get_DefaultLibraryPath32Bit()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.DefaultLibraryPath64BitGet">
            <summary>Задает оболочка совместимости AssimpLibrary.get_DefaultLibraryPath64Bit()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.DetachAllLogStreams">
            <summary>Задает оболочка совместимости AssimpLibrary.DetachAllLogStreams()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.DetachLogStreamIntPtr">
            <summary>Задает оболочка совместимости AssimpLibrary.DetachLogStream(IntPtr logStreamPtr)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.EnableVerboseLoggingBoolean">
            <summary>Задает оболочка совместимости AssimpLibrary.EnableVerboseLogging(Boolean enable)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.ExportSceneIntPtrStringStringIntPtrPostProcessSteps">
            <summary>Задает оболочка совместимости AssimpLibrary.ExportScene(IntPtr scene, String formatId, String fileName, IntPtr fileIO, PostProcessSteps preProcessing)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.ExportSceneIntPtrStringStringPostProcessSteps">
            <summary>Задает оболочка совместимости AssimpLibrary.ExportScene(IntPtr scene, String formatId, String fileName, PostProcessSteps preProcessing)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.ExportSceneToBlobIntPtrStringPostProcessSteps">
            <summary>Задает оболочка совместимости AssimpLibrary.ExportSceneToBlob(IntPtr scene, String formatId, PostProcessSteps preProcessing)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.FreeLibrary">
            <summary>Задает оболочка совместимости AssimpLibrary.FreeLibrary()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.GetCompileFlags">
            <summary>Задает оболочка совместимости AssimpLibrary.GetCompileFlags()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.GetErrorString">
            <summary>Задает оболочка совместимости AssimpLibrary.GetErrorString()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.GetExportFormatDescriptions">
            <summary>Задает оболочка совместимости AssimpLibrary.GetExportFormatDescriptions()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.GetExtensionList">
            <summary>Задает оболочка совместимости AssimpLibrary.GetExtensionList()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.GetLegalString">
            <summary>Задает оболочка совместимости AssimpLibrary.GetLegalString()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.GetMemoryRequirementsIntPtr">
            <summary>Задает оболочка совместимости AssimpLibrary.GetMemoryRequirements(IntPtr scene)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.GetVersion">
            <summary>Задает оболочка совместимости AssimpLibrary.GetVersion()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.GetVersionMajor">
            <summary>Задает оболочка совместимости AssimpLibrary.GetVersionMajor()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.GetVersionMinor">
            <summary>Задает оболочка совместимости AssimpLibrary.GetVersionMinor()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.GetVersionRevision">
            <summary>Задает оболочка совместимости AssimpLibrary.GetVersionRevision()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.IdentityMatrix3Matrix3x3Out">
            <summary>Задает оболочка совместимости AssimpLibrary.IdentityMatrix3(Matrix3x3&amp; mat)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.IdentityMatrix4Matrix4x4Out">
            <summary>Задает оболочка совместимости AssimpLibrary.IdentityMatrix4(Matrix4x4&amp; mat)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.ImportFileFromStreamStreamPostProcessStepsStringIntPtr">
            <summary>Задает оболочка совместимости AssimpLibrary.ImportFileFromStream(Stream stream, PostProcessSteps flags, String formatHint, IntPtr propStore)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.ImportFileStringPostProcessStepsIntPtr">
            <summary>Задает оболочка совместимости AssimpLibrary.ImportFile(String file, PostProcessSteps flags, IntPtr propStore)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.ImportFileStringPostProcessStepsIntPtrIntPtr">
            <summary>Задает оболочка совместимости AssimpLibrary.ImportFile(String file, PostProcessSteps flags, IntPtr fileIO, IntPtr propStore)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.InstanceGet">
            <summary>Задает оболочка совместимости AssimpLibrary.get_Instance()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.IsExtensionSupportedString">
            <summary>Задает оболочка совместимости AssimpLibrary.IsExtensionSupported(String extension)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.LibraryLoadedGet">
            <summary>Задает оболочка совместимости AssimpLibrary.get_LibraryLoaded()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.LibraryPathGet">
            <summary>Задает оболочка совместимости AssimpLibrary.get_LibraryPath()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.LoadIfNotLoaded">
            <summary>Задает оболочка совместимости AssimpLibrary.LoadIfNotLoaded()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.LoadLibrary">
            <summary>Задает оболочка совместимости AssimpLibrary.LoadLibrary()</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.LoadLibraryString">
            <summary>Задает оболочка совместимости AssimpLibrary.LoadLibrary(String libPath)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.LoadLibraryStringString">
            <summary>Задает оболочка совместимости AssimpLibrary.LoadLibrary(String lib32Path, String lib64Path)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.MultiplyMatrix3Matrix3x3RefMatrix3x3Ref">
            <summary>Задает оболочка совместимости AssimpLibrary.MultiplyMatrix3(Matrix3x3&amp; dst, Matrix3x3&amp; src)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.MultiplyMatrix4Matrix4x4RefMatrix4x4Ref">
            <summary>Задает оболочка совместимости AssimpLibrary.MultiplyMatrix4(Matrix4x4&amp; dst, Matrix4x4&amp; src)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.ReleaseImportIntPtr">
            <summary>Задает оболочка совместимости AssimpLibrary.ReleaseImport(IntPtr scene)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.ReleasePropertyStoreIntPtr">
            <summary>Задает оболочка совместимости AssimpLibrary.ReleasePropertyStore(IntPtr propertyStore)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.SetImportPropertyFloatIntPtrStringSingle">
            <summary>Задает оболочка совместимости AssimpLibrary.SetImportPropertyFloat(IntPtr propertyStore, String name, Single value)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.SetImportPropertyIntegerIntPtrStringInt32">
            <summary>Задает оболочка совместимости AssimpLibrary.SetImportPropertyInteger(IntPtr propertyStore, String name, Int32 value)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.SetImportPropertyStringIntPtrStringString">
            <summary>Задает оболочка совместимости AssimpLibrary.SetImportPropertyString(IntPtr propertyStore, String name, String value)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.TransformVecByMatrix3Vector3DRefMatrix3x3Ref">
            <summary>Задает оболочка совместимости AssimpLibrary.TransformVecByMatrix3(Vector3D&amp; vec, Matrix3x3&amp; mat)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.TransformVecByMatrix4Vector3DRefMatrix4x4Ref">
            <summary>Задает оболочка совместимости AssimpLibrary.TransformVecByMatrix4(Vector3D&amp; vec, Matrix4x4&amp; mat)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.TransposeMatrix3Matrix3x3Ref">
            <summary>Задает оболочка совместимости AssimpLibrary.TransposeMatrix3(Matrix3x3&amp; mat)</summary>
        </member>
        <member name="P:Assimp.Unmanaged.Fakes.ShimAssimpLibrary.TransposeMatrix4Matrix4x4Ref">
            <summary>Задает оболочка совместимости AssimpLibrary.TransposeMatrix4(Matrix4x4&amp; mat)</summary>
        </member>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.AssimpNetDelegates">
            <summary>Содержит пользовательские делегаты для заглушек и оболочек совместимости AssimpNet</summary>
        </member>
    </members>
</doc>
